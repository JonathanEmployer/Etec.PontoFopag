@model Modelo.Proxy.pxyExportacaoFolha
@{
    ViewBag.Title = ViewBag.titulo;
    Dictionary<string, string> controllerVoltar = new Dictionary<string, string>();
    //if (Model.IdLayout < 0)
    //{
    controllerVoltar.Add("Index", "Home");
    //}
    //else
    //{
    //    controllerVoltar.Add("Grid", "LayoutExportacao");
    //}

}
@using (Html.BeginForm())
{
    <div class="divCenter">
        <div class="panel panel-default" style="padding:0">
            <div class="panel-heading salvando">
                @Html.ActionLink("X", controllerVoltar.First().Key, controllerVoltar.First().Value, null, new { @class = "close" })
                <h3 class="panel-title titulo-pagina">@ViewBag.Title</h3>
            </div>
            <div class="panel-body panelConteudo" id="panelBodyFixo">
                @Html.ValidationMessage("CustomError")
                @if (ViewBag.ExportacaoTxt == false)
                {
                    @Html.HiddenFor(model => model.IdLayout)
                }
                @Html.HiddenFor(model => model.Identificacao)
                <div class="row">
                    <div class="col-md-12">
                        <div class="alert alert-success" id="alertaArquivoGerado" style="display:none;">
                            <a href="#" class="close" aria-label="close" id="closeAlertaArquivoGerado">&times;</a>
                            Arquivo gerado com <strong>Successo!</strong>
                        </div>
                    </div>
                </div>
                @Html.HiddenFor(x => x.TipoSelecao)
                @Html.ValidationSummary(true)
                @Html.ValidationMessage("CustomError", new { id = "CustomError" })
                <div>
                    <div class="col-md-12">
                        @Html.ValidationMessageFor(model => Model.TipoSelecao)
                    </div>
                    <div class="row" style="padding-bottom:0px;">
                        <div id="divPeriodo" class="col-md-12">
                            <div class="panel panel-default" id="pnlData">
                                <div class="panel-heading" style="padding-top:5px; padding-bottom:0px">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="col-md-2"><label class="control-label label-sm">Período</label></div>
                                            <div class="col-md-8">
                                                <div class="row">
                                                    <div class="col-md-5">
                                                        <div class="input-group input-group-sm" onkeypress="dataKeypress('#DataI')">
                                                            @Html.TextBoxFor(model => Model.DataI, new { @class = "form-control input-sm MascDate datepickerpt", id = "DataI" })
                                                            <span class="input-group-btn">
                                                                <button class="btn btn-primary" id="btnDtInicio" type="button"><span class="glyphicon glyphicon-calendar"></span></button>
                                                            </span>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-1">
                                                        @Html.Label("a", new { @class = "label-sm" })
                                                    </div>
                                                    <div class="col-md-5">
                                                        <div class="input-group input-group-sm" onkeypress="dataKeypress('#DataF')">
                                                            @Html.TextBoxFor(model => Model.DataF, new { @class = "form-control input-sm MascDate datepickerpt", id = "DataF" })
                                                            <span class="input-group-btn">
                                                                <button class="btn btn-primary" id="btnDtFim" type="button"><span class="glyphicon glyphicon-calendar"></span></button>
                                                            </span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            @Html.HiddenFor(model => model.Intervalo)
                                            @Html.ValidationMessageFor(model => model.Intervalo)
                                            @Html.ValidationMessageFor(model => Model.DataI)
                                            @Html.ValidationMessageFor(model => Model.DataF)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row" style="margin-bottom: 10px;">
                        @if (ViewBag.ExportacaoTxt)
                        {
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.IdLayout, new { @class = "control-label label-sm" })
                                @Html.DropDownListFor(model => model.IdLayout, (IEnumerable<SelectListItem>)ViewBag.LayoutExportacao, new { @class = "form-control input-sm", style = "height: 25px;" })
                                @Html.ValidationMessageFor(model => model.IdLayout)
                            </div>
                        }
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.IdListaEventos, new { @class = "control-label label-sm" })
                            @Html.DropDownListFor(model => model.IdListaEventos, (IEnumerable<SelectListItem>)ViewBag.ListaEventos, new { @class = "form-control input-sm", style = "height: 25px;" })
                            @Html.ValidationMessageFor(model => model.IdListaEventos)
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            @Html.HiddenFor(x => x.idSelecionados)
                            @Html.ValidationMessageFor(x => x.idSelecionados)
                            <div class="row">
                                @Html.GridFor("tbFun", (new Modelo.Proxy.pxyFuncionarioRelatorio()).GetType(), true, "GetFuncsRel", "GetFuns")
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            @Html.Partial("../JobManager/JobView")
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel-footer">
                <div class="row">
                    <div class="col-xs-12 center-block">
                        <div style="text-align: right">
                            <button type="submit" class="btn btn-success salvando desabilitar" id="btnGerar">
                                <span class="glyphicon glyphicon-ok-circle"></span> &nbsp;Exportar&nbsp;&nbsp;
                            </button>
                            <a class="btn btn-danger salvando"
                               href="@Url.Action(controllerVoltar.First().Key, controllerVoltar.First().Value)">
                                <span class="glyphicon glyphicon-remove salvando"></span> Cancelar
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script>

    var errorArray = new Array();
    cwk_DataCalendario('#btnDtInicio', '#DataI');
    cwk_DataCalendario('#btnDtFim', '#DataF');

    $(document).ready(function () {
        $('.datepickerpt').datepicker().on('hide', function (ev) {
            $("#pnlData").removeClass("panel-danger").removeClass("panel-success");
            $("#pnlData").addClass("panel-default");
            errorArray["Intervalo"] = null;
            $("form").validate().showErrors(errorArray);
            if ((this.id == "DataI") && (($("#DataI").val() != null && $("#DataI").val() != "") && ($("#DataF").val() == null || $("#DataF").val() == ""))) {
                var inid = new Date(ev.date);
                endDate = new Date(ev.date);
                endDate.setDate(endDate.getDate() + 30);
                endDateString = ('0' + endDate.getDate()).slice(-2) + '/'
                    + ('0' + (endDate.getMonth() + 1)).slice(-2) + '/'
                    + endDate.getFullYear();
                $('#DataF').val(endDateString);
                $('#DataF').datepicker('update');
            }
            validaPeriodo(this);

        });

        $('#tbFun tbody').on('click', 'tr', function () {
            errorArray["idSelecionados"] = null;
            $("form").validate().showErrors(errorArray);
        });
    });

    function validaForm() {
        var retorno = true;
        $("#idSelecionados").val(GetSelecionados('tbFun'));
        if ($("#idSelecionados").val().length <= 0 || $("#idSelecionados").val() == '' || $("#idSelecionados").val() == null) {
            var msgErro = 'Para Imprimir o Relatório é Necessário Selecionar Pelo Menos um Funcionário.';
            errorArray["idSelecionados"] = msgErro;
            cwkErro(msgErro);
            $("form").validate().showErrors(errorArray);
            retorno = false;
        }
        else {
            errorArray["idSelecionados"] = null;
            $("form").validate().showErrors(errorArray);
            retorno = true;
        }

        return retorno;
    }

    function validaPeriodo(campo) {
        if (($("#DataI").val() != null && $("#DataI").val() != "") && ($("#DataF").val() != null && $("#DataF").val() != "")) {
            var dias = diasPeriodo($("#DataI").val(), $('#DataF').val());

            if (dias <= 0) {
                errorArray["Intervalo"] = 'Data Inícial deve ser menor que a Final';
                $("form").validate().showErrors(errorArray);
                $("#pnlData").removeClass("panel-default");
                $("#pnlData").addClass("panel-danger");
                $("#divGridMarcacao").html("");
                $("#DataF").focus();
                return false;
            }
            else {
                $("#pnlData").removeClass("panel-default").removeClass("panel-danger");
                $("#pnlData").addClass("panel-default");
                return true;
            }

        }
        else {
            if (($("#DataI").val() == null || $("#DataI").val() == "") && ($("#DataF").val() == null || $("#DataF").val() == "")) {
                errorArray["Intervalo"] = 'A Data Inicial e Final devem ser preenchidas!';
                $("#DataI").focus();
            }
            else {

                if ($("#DataI").val() == null || $("#DataI").val() == "") {
                    errorArray["Intervalo"] = 'A Data Inicial deve ser preenchida!';
                    $("#DataI").focus();
                }
                if ($("#DataF").val() == null || $("#DataF").val() == "") {
                    errorArray["Intervalo"] = 'A Data Final deve ser preenchida!';
                    $("#DataF").focus();
                }
            }

            $("form").validate().showErrors(errorArray);
            $("#pnlData").removeClass("panel-default").removeClass("panel-success");
            $("#pnlData").addClass("panel-danger");
            $("#divGridMarcacao").html("");
            return false;
        }
    }

    $("#btnGerar").click(function (event) {
        $('#alertaArquivoGerado').fadeOut();
        if (!validaForm()) {
            event.preventDefault();
        }
    });

    $('form').submit(function () {
        if ($(this).valid()) {
            PostFormJob(this);
        }
        return false;
    });

    $("#closeAlertaArquivoGerado").click(function () {
        $('#alertaArquivoGerado').fadeOut();
    });

    
</script>