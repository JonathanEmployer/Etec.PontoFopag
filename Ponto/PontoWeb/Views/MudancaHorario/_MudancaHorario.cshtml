@model Modelo.MudancaHorario

<div>
    @Html.HiddenFor(model => model.Id, new { id = "idMudancaHorario" })
    @Html.HiddenFor(model => model.Incdata)
    @Html.HiddenFor(model => model.Inchora)
    @Html.HiddenFor(model => model.Incusuario)
    @Html.HiddenFor(model => model.Altdata)
    @Html.HiddenFor(model => model.Althora)
    @Html.HiddenFor(model => model.Altusuario)
    @Html.HiddenFor(model => model.Tipohorario_ant)
    @Html.HiddenFor(model => model.Data_Ant)
    @Html.HiddenFor(model => model.Idhorario_ant)
    @Html.Raw(HttpUtility.HtmlDecode(@Html.ValidationMessage("CustomError").ToHtmlString()))
    @if (!String.IsNullOrEmpty(@ViewBag.MensagemFechamento))
    {
        @Html.Raw(ViewBag.MensagemFechamento + "</div>")
    }
    @*Div Tipo Mudança Horário*@
    <div class="row" id="divTipoMudanca">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-heading" style="padding-top: 0px; padding-bottom: 0px; padding-right:0; padding-left:0">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.Tipo, new { @class = "control-label label-sm" })
                            </div>
                            <div class="col-md-10">
                                <div class="form-group input-group-sm">
                                    @if (ViewBag.UtilizaControleContratos == false)
                                    {
                                        <div class="col-md-3">
                                            <div class="radio-inline" data-toggle="radio">
                                                @Html.RadioButtonFor(model => model.Tipo, 2, new { id = "idRadioEmpresa", name = "rdio" })
                                                <label class="label-sm" for="idRadioEmpresa">Empresa</label>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="radio-inline" data-toggle="radio">
                                                @Html.RadioButtonFor(model => model.Tipo, 1, new { id = "idRadioDepartamento", name = "rdio" })
                                                <label class="label-sm" for="idRadioDepartamento">Departamento</label>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="radio-inline" data-toggle="radio">
                                                @Html.RadioButtonFor(model => model.Tipo, 3, new { id = "idRadioFuncao", name = "rdio" })
                                                <label class="label-sm" for="idRadioFuncao">Função</label>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="radio-inline" data-toggle="radio">
                                                @Html.RadioButtonFor(model => model.Tipo, 0, new { id = "idRadioFuncionario", name = "rdio" })
                                                <label class="label-sm" for="idRadioFuncionario">Funcionário</label>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="col-md-3">
                                            <div class="radio-inline" data-toggle="radio">
                                                @Html.RadioButtonFor(model => model.Tipo, 0, new { id = "idRadioFuncionario", name = "rdio" })
                                                <label class="label-sm" for="idRadioFuncionario">Funcionário</label>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-body" style="padding-top:0">
                    @if (ViewBag.UtilizaControleContratos == false)
                    {
                        <div id="divEmpresaM" class="row divsTipo">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NomeEmpresa, new { @class = "control-label label-sm" })
                                    <div class="input-group input-group-sm">
                                        @Html.TextBoxFor(model => model.NomeEmpresa, new { @class = "form-control  input-sm", id = "lkpEmpresaM" })
                                        <span class="input-group-btn">
                                            <button class="btn btn-primary desabilitar" id="btnEmpresaM" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.NomeEmpresa)
                                </div>
                            </div>
                        </div>
                        <div id="divDepartamentoM" class="row divsTipo">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NomeDepartamento, new { @class = "control-label label-sm" })
                                    <div class="input-group input-group-sm">
                                        @Html.TextBoxFor(model => model.NomeDepartamento, new { @class = "form-control  input-sm", id = "lkpDepartamentoM" })
                                        <span class="input-group-btn">
                                            <button class="btn btn-primary desabilitar" id="btnDepartamentoM" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.NomeDepartamento)
                                </div>
                            </div>
                        </div>
                        <div id="divFuncaoM" class="row divsTipo">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NomeFuncao, new { @class = "control-label label-sm" })
                                    <div class="input-group input-group-sm">
                                        @Html.TextBoxFor(model => model.NomeFuncao, new { @class = "form-control  input-sm", id = "lkpFuncaoM" })
                                        <span class="input-group-btn">
                                            <button class="btn btn-primary desabilitar" id="btnFuncaoM" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.NomeFuncao)
                                </div>
                            </div>
                        </div>
                        <div id="divFuncionarioM" class="row divsTipo">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NomeFuncionario, new { @class = "control-label label-sm" })
                                    <div class="input-group input-group-sm">
                                        @Html.TextBoxFor(model => model.NomeFuncionario, new { @class = "form-control  input-sm", id = "lkpFuncionarioM" })
                                        <span class="input-group-btn">
                                            <button class="btn btn-primary" id="btnFuncionarioM" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.NomeFuncionario)
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div id="divFuncionarioM" class="row divsTipo">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NomeFuncionario, new { @class = "control-label label-sm" })
                                    <div class="input-group input-group-sm">
                                        @Html.TextBoxFor(model => model.NomeFuncionario, new { @class = "form-control  input-sm", id = "lkpFuncionarioM" })
                                        <span class="input-group-btn">
                                            <button class="btn btn-primary" id="btnFuncionarioM" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.NomeFuncionario)
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="row" style="padding-top:5px">
        @*Div tipo Turno*@
        <div class="col-md-4">
            <div class="panel panel-default" style="margin-bottom:4px">
                <div class="panel-heading" style="padding-top:1px; padding-bottom:0px">
                    @Html.LabelFor(model => model.Tipohorario, new { @class = "control-label label-sm" })
                </div>
                <div class="panel-body" style="padding-top:8px; padding-bottom:5px">
                    <div class="form-group input-group-sm">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="radio-inline" data-toggle="radioTipoHorario">
                                    @Html.RadioButtonFor(model => model.Tipohorario, 1, new { id = "idRadioNormal", name = "rdioTipoHorario" })
                                    <label class="label-sm" for="idRadioNormal">Normal</label>
                                </div>
                                <div class="radio-inline" data-toggle="radioTipoHorario">
                                    @Html.RadioButtonFor(model => model.Tipohorario, 2, new { id = "idRadioFlexivel", name = "rdioTipoHorario" })
                                    <label class="label-sm" for="idRadioFlexivel">Flexível</label>
                                </div>
                                <div class="radio-inline" data-toggle="radioTipoHorario">
                                    @Html.RadioButtonFor(model => model.Tipohorario, 3, new { id = "idRadioDinamico", name = "rdioTipoHorario" })
                                    <label class="label-sm" for="idRadioDinamico">Dinâmico</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-2" id="divDataMud">
            <div class="form-group input-group-sm">
                @Html.LabelFor(model => model.Data, new { @class = "control-label label-sm" })
                <div class="input-group input-group-sm">
                    @Html.TextBoxFor(model => model.Data, new { @class = "form-control input-sm MascDate datepickerpt", id = "DataM" })
                    <span class="input-group-btn">
                        <button class="btn btn-primary" id="btnDataM" type="button"><span class="glyphicon glyphicon-calendar"></span></button>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.Data)
            </div>
        </div>
        <div class="col-md-6">
            <div id="DivHorarioNormal">
                <div class="form-group">
                    @Html.LabelFor(model => model.HorarioNormal, new { @class = "control-label label-sm" })
                    <div class="input-group input-group-sm">
                        @Html.TextBoxFor(model => model.HorarioNormal, new { @class = "form-control  input-sm lkpHorarioNormal", id = "lkpHorarioNormal" })
                        <span class="input-group-btn">
                            <button class="btn btn-primary lkpHorarioNormal" id="btnHorarioNormal" type="button"><span class="glyphicon glyphicon-search"></span></button>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.HorarioNormal)
                </div>
            </div>
            <div id="DivHorarioFlexivel">
                <div class="form-group">
                    @Html.LabelFor(model => model.HorarioFlexivel, new { @class = "control-label label-sm" })
                    <div class="input-group input-group-sm">
                        @Html.TextBoxFor(model => model.HorarioFlexivel, new { @class = "form-control  input-sm lkpHorarioFlexivel", id = "lkpHorarioFlexivel" })
                        <span class="input-group-btn">
                            <button class="btn btn-primary lkpHorarioFlexivel" id="btnHorarioFlexivel" type="button"><span class="glyphicon glyphicon-search"></span></button>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.HorarioFlexivel)
                </div>
            </div>
            <div id="DivHorarioDinamico">
                <div class="form-group">
                    @Html.LabelFor(model => model.HorarioDinamico, new { @class = "control-label label-sm" })
                    <div class="input-group input-group-sm">
                        @Html.TextBoxFor(model => model.HorarioDinamico, new { @class = "form-control  input-sm lkpHorarioDinamico", id = "lkpHorarioDinamico" })
                        <span class="input-group-btn">
                            <button class="btn btn-primary lkpHorarioDinamico" id="btnHorarioDinamico" type="button"><span class="glyphicon glyphicon-search"></span></button>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.HorarioDinamico)
                </div>
            </div>
        </div>
    </div>
    <div class="row" style="min-height:100px">
        <div class="col-md-12">
            @Html.ValidationMessageFor(model => model.CicloSequenciaIndice)
        </div>
        <div class="col-md-12" id="divHorarioDinamicoDetalhes">

        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        cwk_DataCalendario('#btnDataM', '#DataM');
        cwk_EventoConsulta("#btnEmpresaM", "#lkpEmpresaM", "EventoConsulta", "Empresa", "");
        cwk_EventoConsulta("#btnDepartamentoM", "#lkpDepartamentoM", "EventoConsulta", "Departamento", "#lkpEmpresaM");
        cwk_EventoConsulta("#btnFuncionarioM", "#lkpFuncionarioM", "EventoConsulta", "Funcionario", "");
        cwk_EventoConsulta("#btnFuncaoM", "#lkpFuncaoM", "EventoConsulta", "Funcao", "");
        validaTipo($('input:radio[name=Tipo]:checked').val());
        validaTipoHorario($('input:radio[name=Tipohorario]:checked').val());
        $(":input[type='text']:enabled:visible:first").focus();
        GetHorarioDinamico();
    });

    $(".lkpHorarioNormal").bind("keydown click", function (e) {
        cwk_EventoConsultaUnico(e, this, "", "Horario", "");
    });

    $(".lkpHorarioFlexivel").bind("keydown click", function (e) {
        cwk_EventoConsultaUnico(e, this, "", "HorarioMovel", "");
    });

    $(".lkpHorarioDinamico").bind("keydown click", function (e) {
        cwk_EventoConsultaUnico(e, this, "", "HorarioDinamico", "", GetHorarioDinamico);
    });

    $("#lkpEmpresaM").change(function () {
        $('#lkpDepartamentoM').val('');
    });

    $('input:radio[name=Tipo]').change(function () {
        validaTipo($(this).val());
    });

    $('input:radio[name=Tipohorario]').change(function () {
        validaTipoHorario($(this).val());
    });

    function validaTipoHorario(valor) {
        if (valor == 1) { @*Horario Normal*@
            $("#DivHorarioFlexivel").hide();
            $("#lkpHorarioFlexivel").val("");
            $("#DivHorarioDinamico").hide();
            $("#lkpHorarioDinamico").val("");
            $("#DivHorarioNormal").show();
        }
        else if (valor == 2) {
            $("#DivHorarioNormal").hide();
            $("#lkpHorarioNormal").val("");
            $("#DivHorarioDinamico").hide();
            $("#lkpHorarioDinamico").val("");
            $("#DivHorarioFlexivel").show();
        } else if (valor == 3) {
            $("#DivHorarioNormal").hide();
            $("#lkpHorarioNormal").val("");
            $("#DivHorarioFlexivel").hide();
            $("#lkpHorarioFlexivel").val("");
            $("#DivHorarioDinamico").show();
        }
    };

    function GetHorarioDinamico() {
        var horario = $("#lkpHorarioDinamico").val();
        if (horario.length > 0) {
            var parametros = { horario: horario };
            CarregaDadosAjax('Selecionar', 'HorarioDinamico', parametros, '#divHorarioDinamicoDetalhes', null, SetaCiclo);
        }
    }

    function SetaCiclo() {
        if (!isEmpty('@Model.CicloSequenciaIndice')) {
            $('input:radio[name="CicloSequenciaIndice"]').filter('[value="@Model.CicloSequenciaIndice"]').attr('checked', true);
        }

    }

    function validaTipo(valor) {
        $("#lkpEmpresaM").prop('disabled', false);
        $("#btnEmpresaM").prop('disabled', false);
        $("#lkpDepartamentoM").prop('disabled', false);
        $("#btnDepartamentoM").prop('disabled', false);
        $("#lkpFuncionarioM").prop('disabled', false);
        $("#btnFuncionarioM").prop('disabled', false);
        $("#lkpFuncaoM").prop('disabled', false);
        $("#btnFuncaoM").prop('disabled', false);
        $("#divEmpresaM").hide();
        $("#divDepartamentoM").hide();
        $("#divFuncaoM").hide();
        $("#divFuncionarioM").hide();
        switch (true) {
            case (valor == 0): // Funcionario
                $("#btnEmpresaM").prop('disabled', true);
                $("#lkpEmpresaM").prop('disabled', true);
                $("#lkpEmpresaM").val('');
                $("#btnDepartamentoM").prop('disabled', true);
                $("#lkpDepartamentoM").prop('disabled', true);
                $("#lkpDepartamentoM").val('');
                $("#btnFuncaoM").prop('disabled', true);
                $("#lkpFuncaoM").prop('disabled', true);
                $("#lkpFuncaoM").val('');
                $("#divFuncionarioM").show();
                break;
            case (valor == 1): // Departamento
                $("#btnFuncionarioM").prop('disabled', true);
                $("#lkpFuncionarioM").prop('disabled', true);
                $("#lkpFuncionarioM").val('');
                $("#btnFuncaoM").prop('disabled', true);
                $("#lkpFuncaoM").prop('disabled', true);
                $("#lkpFuncaoM").val('');
                $("#divEmpresaM").show();
                $("#divDepartamentoM").show();
                break;
            case (valor == 2): // Empresa
                $("#btnFuncionarioM").prop('disabled', true);
                $("#lkpFuncionarioM").prop('disabled', true);
                $("#lkpFuncionarioM").val('');
                $("#btnDepartamentoM").prop('disabled', true);
                $("#lkpDepartamentoM").prop('disabled', true);
                $("#lkpDepartamentoM").val('');
                $("#btnFuncaoM").prop('disabled', true);
                $("#lkpFuncaoM").prop('disabled', true);
                $("#lkpFuncaoM").val('');
                $("#divEmpresaM").show();
                break;
            case (valor == 3): // Funcao
                $("#btnFuncionarioM").prop('disabled', true);
                $("#lkpFuncionarioM").prop('disabled', true);
                $("#lkpFuncionarioM").val('');
                $("#btnDepartamentoM").prop('disabled', true);
                $("#lkpDepartamentoM").prop('disabled', true);
                $("#lkpDepartamentoM").val('');
                $("#btnEmpresaM").prop('disabled', true);
                $("#lkpEmpresaM").prop('disabled', true);
                $("#lkpEmpresaM").val('');
                $("#divFuncaoM").show();
                break;
            default:
                break;
        }
    }
</script>