@model Modelo.MudancaHorario
@{
    ViewBag.Title = "Cadastrar Mudança de Horário";
}
@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.Id, new { id = "idMudancaHorario" });
    @Html.HiddenFor(model => model.Incdata);
    @Html.HiddenFor(model => model.Inchora);
    @Html.HiddenFor(model => model.Incusuario);
    @Html.HiddenFor(model => model.Altdata);
    @Html.HiddenFor(model => model.Althora);
    @Html.HiddenFor(model => model.Altusuario);
    @Html.HiddenFor(model => model.Tipohorario_ant);
    @Html.HiddenFor(model => model.Data_Ant);
    @Html.HiddenFor(model => model.Idhorario_ant);

    <div class="divCenterGrande">
        <div class="panel panel-default">
            <div class="panel-heading salvando">
                @Html.ActionLink("X", "Index", "Home", null, new { @class = "close" })
                <h3 class="panel-title titulo-pagina">@ViewBag.Title</h3>
            </div>
            <div class="panel-body panelConteudo" id="panelBodyMaximo">
                @Html.Raw(HttpUtility.HtmlDecode(@Html.ValidationMessage("CustomError").ToHtmlString()))
                @if (!String.IsNullOrEmpty(@ViewBag.MensagemFechamento))
                {
                    @Html.Raw(ViewBag.MensagemFechamento + "</div>")
                }
                @*Div Tipo Mudança Horário*@
                <div class="row">
                    <div class="col-md-12">
                        <div class="panel panel-default">
                            <div class="panel-heading" style="padding-top: 0px; padding-bottom: 0px; padding-right:0; padding-left:0">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="col-md-2">
                                            @Html.LabelFor(model => model.Tipo, new { @class = "control-label label-sm" })
                                        </div>
                                        <div class="col-md-10">
                                            <div class="form-group input-group-sm">
                                                @if (ViewBag.UtilizaControleContratos == false)
                                                {
                                                    <div class="col-md-3">
                                                        <div class="radio-inline" data-toggle="radio">
                                                            @Html.RadioButtonFor(model => model.Tipo, 2, new { id = "idRadioEmpresa", name = "rdio" })
                                                            <label class="label-sm" for="idRadioEmpresa">Empresa</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-3">
                                                        <div class="radio-inline" data-toggle="radio">
                                                            @Html.RadioButtonFor(model => model.Tipo, 1, new { id = "idRadioDepartamento", name = "rdio" })
                                                            <label class="label-sm" for="idRadioDepartamento">Departamento</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-3">
                                                        <div class="radio-inline" data-toggle="radio">
                                                            @Html.RadioButtonFor(model => model.Tipo, 3, new { id = "idRadioFuncao", name = "rdio" })
                                                            <label class="label-sm" for="idRadioFuncao">Função</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-3">
                                                        <div class="radio-inline" data-toggle="radio">
                                                            @Html.RadioButtonFor(model => model.Tipo, 0, new { id = "idRadioFuncionario", name = "rdio" })
                                                            <label class="label-sm" for="idRadioFuncionario">Funcionário</label>
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="col-md-3">
                                                        <div class="radio-inline" data-toggle="radio">
                                                            @Html.RadioButtonFor(model => model.Tipo, 0, new { id = "idRadioFuncionario", name = "rdio" })
                                                            <label class="label-sm" for="idRadioFuncionario">Funcionário</label>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="panel-body" style="padding-top:0">
                                @if (ViewBag.UtilizaControleContratos == false)
                                {
                                    <div id="divEmpresa" class="row divsTipo">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.NomeEmpresa, new { @class = "control-label label-sm" })
                                                <div class="input-group input-group-sm">
                                                    @Html.TextBoxFor(model => model.NomeEmpresa, new { @class = "form-control  input-sm", id = "lkpEmpresa" })
                                                    <span class="input-group-btn">
                                                        <button class="btn btn-primary desabilitar" id="btnEmpresa" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                                    </span>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.NomeEmpresa)
                                            </div>
                                        </div>
                                    </div>
                                    <div id="divDepartamento" class="row divsTipo">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.NomeDepartamento, new { @class = "control-label label-sm" })
                                                <div class="input-group input-group-sm">
                                                    @Html.TextBoxFor(model => model.NomeDepartamento, new { @class = "form-control  input-sm", id = "lkpDepartamento" })
                                                    <span class="input-group-btn">
                                                        <button class="btn btn-primary desabilitar" id="btnDepartamento" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                                    </span>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.NomeDepartamento)
                                            </div>
                                        </div>
                                    </div>
                                    <div id="divFuncao" class="row divsTipo">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.NomeFuncao, new { @class = "control-label label-sm" })
                                                <div class="input-group input-group-sm">
                                                    @Html.TextBoxFor(model => model.NomeFuncao, new { @class = "form-control  input-sm", id = "lkpFuncao" })
                                                    <span class="input-group-btn">
                                                        <button class="btn btn-primary desabilitar" id="btnFuncao" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                                    </span>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.NomeFuncao)
                                            </div>
                                        </div>
                                    </div>
                                    <div id="divFuncionario" class="row divsTipo">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.NomeFuncionario, new { @class = "control-label label-sm" })
                                                <div class="input-group input-group-sm">
                                                    @Html.TextBoxFor(model => model.NomeFuncionario, new { @class = "form-control  input-sm", id = "lkpFuncionario" })
                                                    <span class="input-group-btn">
                                                        <button class="btn btn-primary desabilitar" id="btnFuncionario" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                                    </span>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.NomeFuncionario)
                                            </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div id="divFuncionario" class="row divsTipo">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.NomeFuncionario, new { @class = "control-label label-sm" })
                                                <div class="input-group input-group-sm">
                                                    @Html.TextBoxFor(model => model.NomeFuncionario, new { @class = "form-control  input-sm", id = "lkpFuncionario" })
                                                    <span class="input-group-btn">
                                                        <button class="btn btn-primary desabilitar" id="btnFuncionario" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                                    </span>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.NomeFuncionario)
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" style="padding-top:5px">
                    @*Div tipo Turno*@
                    <div class="col-md-4">
                        <div class="panel panel-default" style="margin-bottom:4px">
                            <div class="panel-heading" style="padding-top:1px; padding-bottom:0px">
                                @Html.LabelFor(model => model.Tipohorario, new { @class = "control-label label-sm" })
                            </div>
                            <div class="panel-body" style="padding-top:8px; padding-bottom:5px">
                                <div class="form-group input-group-sm">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="radio-inline" data-toggle="radioTipoHorario">
                                                @Html.RadioButtonFor(model => model.Tipohorario, 1, new { id = "idRadioNormal", name = "rdioTipoHorario" })
                                                <label class="label-sm" for="idRadioNormal">Normal</label>
                                            </div>
                                            <div class="radio-inline" data-toggle="radioTipoHorario">
                                                @Html.RadioButtonFor(model => model.Tipohorario, 2, new { id = "idRadioFlexivel", name = "rdioTipoHorario" })
                                                <label class="label-sm" for="idRadioFlexivel">Flexível</label>
                                            </div>
                                            <div class="radio-inline" data-toggle="radioTipoHorario">
                                                @Html.RadioButtonFor(model => model.Tipohorario, 3, new { id = "idRadioDinamico", name = "rdioTipoHorario" })
                                                <label class="label-sm" for="idRadioDinamico">Dinâmico</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group input-group-sm">
                            @Html.LabelFor(model => model.Data, new { @class = "control-label label-sm" })
                            <div class="input-group input-group-sm">
                                @Html.TextBoxFor(model => model.Data, new { @class = "form-control input-sm MascDate datepickerpt", id = "Data" })
                                <span class="input-group-btn">
                                    <button class="btn btn-primary" id="btnData" type="button"><span class="glyphicon glyphicon-calendar"></span></button>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.Data)
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div id="DivHorarioNormal">
                            <div class="form-group">
                                @Html.LabelFor(model => model.HorarioNormal, new { @class = "control-label label-sm" })
                                <div class="input-group input-group-sm">
                                    @Html.TextBoxFor(model => model.HorarioNormal, new { @class = "form-control  input-sm lkpHorarioNormal", id = "lkpHorarioNormal" })
                                    <span class="input-group-btn">
                                        <button class="btn btn-primary lkpHorarioNormal" id="btnHorarioNormal" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(model => model.HorarioNormal)
                            </div>
                        </div>
                        <div id="DivHorarioFlexivel">
                            <div class="form-group">
                                @Html.LabelFor(model => model.HorarioFlexivel, new { @class = "control-label label-sm" })
                                <div class="input-group input-group-sm">
                                    @Html.TextBoxFor(model => model.HorarioFlexivel, new { @class = "form-control  input-sm lkpHorarioFlexivel", id = "lkpHorarioFlexivel" })
                                    <span class="input-group-btn">
                                        <button class="btn btn-primary lkpHorarioFlexivel" id="btnHorarioFlexivel" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(model => model.HorarioFlexivel)
                            </div>
                        </div>
                        <div id="DivHorarioDinamico">
                            <div class="form-group">
                                @Html.LabelFor(model => model.HorarioDinamico, new { @class = "control-label label-sm" })
                                <div class="input-group input-group-sm">
                                    @Html.TextBoxFor(model => model.HorarioDinamico, new { @class = "form-control  input-sm lkpHorarioDinamico", id = "lkpHorarioDinamico" })
                                    <span class="input-group-btn">
                                        <button class="btn btn-primary lkpHorarioDinamico" id="btnHorarioDinamico" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(model => model.HorarioDinamico)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" style="min-height:100px">
                    <div class="col-md-12">
                        @Html.ValidationMessageFor(model => model.CicloSequenciaIndice)
                    </div>
                    <div class="col-md-12" id="divHorarioDinamicoDetalhes">

                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        @Html.Partial("../JobManager/JobView")
                    </div>
                </div>
            </div>
            <div class="panel-footer">
                <div class="row">
                    <div class="col-xs-12 center-block">
                        <div style="text-align: right">
                            <button type="submit" class="btn btn-success salvando desabilitar desabilitar-ao-carregar">
                                <span class="glyphicon glyphicon-ok-circle"></span> &nbsp;Salvar&nbsp;&nbsp;
                            </button>
                            <a class="btn btn-danger salvando"
                               href="@Url.Action("Index", "Home")">
                                <span class="glyphicon glyphicon-remove salvando"></span> Cancelar
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script>
    $(document).ready(function () {
        cwk_DataCalendario('#btnData', '#Data');
        cwk_EventoConsulta("#btnEmpresa", "#lkpEmpresa", "EventoConsulta", "Empresa", "");
        cwk_EventoConsulta("#btnDepartamento", "#lkpDepartamento", "EventoConsulta", "Departamento", "#lkpEmpresa");
        cwk_EventoConsulta("#btnFuncionario", "#lkpFuncionario", "EventoConsulta", "Funcionario", "");
        cwk_EventoConsulta("#btnFuncao", "#lkpFuncao", "EventoConsulta", "Funcao", "");
        validaTipo($('input:radio[name=Tipo]:checked').val());
        validaTipoHorario($('input:radio[name=Tipohorario]:checked').val());
        $(":input[type='text']:enabled:visible:first").focus();
        GetHorarioDinamico();
    });

    $(".lkpHorarioNormal").bind("keydown click", function (e) {
        cwk_EventoConsultaUnico(e, this, "", "Horario", "");
    });

    $(".lkpHorarioFlexivel").bind("keydown click", function (e) {
        cwk_EventoConsultaUnico(e, this, "", "HorarioMovel", "");
    });

    $(".lkpHorarioDinamico").bind("keydown click", function (e) {
        cwk_EventoConsultaUnico(e, this, "", "HorarioDinamico", "", GetHorarioDinamico);
    });

    $("#lkpEmpresa").change(function () {
        $('#lkpDepartamento').val('');
    });

    $('input:radio[name=Tipo]').change(function () {
        validaTipo($(this).val());
    });

    $('input:radio[name=Tipohorario]').change(function () {
        validaTipoHorario($(this).val());
    });

    function validaTipoHorario(valor) {
        if (valor == 1) { @*Horario Normal*@
            $("#DivHorarioFlexivel").hide();
            $("#lkpHorarioFlexivel").val("");
            $("#DivHorarioDinamico").hide();
            $("#lkpHorarioDinamico").val("");
            $("#DivHorarioNormal").show();
        }
        else if (valor == 2) {
            $("#DivHorarioNormal").hide();
            $("#lkpHorarioNormal").val("");
            $("#DivHorarioDinamico").hide();
            $("#lkpHorarioDinamico").val("");
            $("#DivHorarioFlexivel").show();
        } else if (valor == 3) {
            $("#DivHorarioNormal").hide();
            $("#lkpHorarioNormal").val("");
            $("#DivHorarioFlexivel").hide();
            $("#lkpHorarioFlexivel").val("");
            $("#DivHorarioDinamico").show();
        }
    };

    function GetHorarioDinamico() {
        var horario = $("#lkpHorarioDinamico").val();
        if (horario.length > 0) {
            var parametros = { horario: horario };
            CarregaDadosAjax('Selecionar', 'HorarioDinamico', parametros, '#divHorarioDinamicoDetalhes', null, SetaCiclo);
        }
    }

    function SetaCiclo() {
        if (!isEmpty('@Model.CicloSequenciaIndice')) {
            $('input:radio[name="CicloSequenciaIndice"]').filter('[value="@Model.CicloSequenciaIndice"]').attr('checked', true);
            alert('Seta Ciclo = '+'@Model.CicloSequenciaIndice');
        }

    }

    function validaTipo(valor) {
        $("#lkpEmpresa").prop('disabled', false);
        $("#btnEmpresa").prop('disabled', false);
        $("#lkpDepartamento").prop('disabled', false);
        $("#btnDepartamento").prop('disabled', false);
        $("#lkpFuncionario").prop('disabled', false);
        $("#btnFuncionario").prop('disabled', false);
        $("#lkpFuncao").prop('disabled', false);
        $("#btnFuncao").prop('disabled', false);
        $("#divEmpresa").hide();
        $("#divDepartamento").hide();
        $("#divFuncao").hide();
        $("#divFuncionario").hide();
        switch (true) {
            case (valor == 0): // Funcionario
                $("#btnEmpresa").prop('disabled', true);
                $("#lkpEmpresa").prop('disabled', true);
                $("#lkpEmpresa").val('');
                $("#btnDepartamento").prop('disabled', true);
                $("#lkpDepartamento").prop('disabled', true);
                $("#lkpDepartamento").val('');
                $("#btnFuncao").prop('disabled', true);
                $("#lkpFuncao").prop('disabled', true);
                $("#lkpFuncao").val('');
                $("#divFuncionario").show();
                break;
            case (valor == 1): // Departamento
                $("#btnFuncionario").prop('disabled', true);
                $("#lkpFuncionario").prop('disabled', true);
                $("#lkpFuncionario").val('');
                $("#btnFuncao").prop('disabled', true);
                $("#lkpFuncao").prop('disabled', true);
                $("#lkpFuncao").val('');
                $("#divEmpresa").show();
                $("#divDepartamento").show();
                break;
            case (valor == 2): // Empresa
                $("#btnFuncionario").prop('disabled', true);
                $("#lkpFuncionario").prop('disabled', true);
                $("#lkpFuncionario").val('');
                $("#btnDepartamento").prop('disabled', true);
                $("#lkpDepartamento").prop('disabled', true);
                $("#lkpDepartamento").val('');
                $("#btnFuncao").prop('disabled', true);
                $("#lkpFuncao").prop('disabled', true);
                $("#lkpFuncao").val('');
                $("#divEmpresa").show();
                break;
            case (valor == 3): // Funcao
                $("#btnFuncionario").prop('disabled', true);
                $("#lkpFuncionario").prop('disabled', true);
                $("#lkpFuncionario").val('');
                $("#btnDepartamento").prop('disabled', true);
                $("#lkpDepartamento").prop('disabled', true);
                $("#lkpDepartamento").val('');
                $("#btnEmpresa").prop('disabled', true);
                $("#lkpEmpresa").prop('disabled', true);
                $("#lkpEmpresa").val('');
                $("#divFuncao").show();
                break;
            default:
                break;
        }
    }
</script>
@if (ViewBag.Consultar == 1)
{
    <script>
        $(document).ready(function () {
            $('form').find('input, textarea, button, select').attr('disabled', 'disabled');
        })
    </script>
}