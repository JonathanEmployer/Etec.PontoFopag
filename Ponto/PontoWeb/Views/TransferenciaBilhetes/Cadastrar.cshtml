@model Modelo.TransferenciaBilhetes
@{
    ViewBag.Title = "Transferência de Bilhetes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    <div class="divCenter">
        <div class="panel panel-default" style="margin-bottom:0">
            <div class="panel-heading">
                @Html.ActionLink("X", "Grid", "TransferenciaBilhetes", null, new { @class = "close" })
                <h3 class="panel-title titulo-pagina">@ViewBag.Title</h3>
            </div>
            <div class="panel-body panelConteudo" id="panelBodyFixo">
                @Html.ValidationSummary(true)
                @Html.ValidationMessage("CustomError", new { id = "CustomError" })
                <div class="row">
                    <div class="col-md-2">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Codigo, new { @class = "control-label label-sm" })
                            @Html.TextBoxFor(model => model.Codigo, new { @class = "form-control  input-sm" })
                            @Html.ValidationMessageFor(model => model.Codigo)
                        </div>
                    </div>
                    <div class="col-md-4">
                        @Html.Partial("_Periodo", new Modelo.Proxy.PxyPeriodo() { DataInicio = Model.DataInicio, DataFim = Model.DataFim })
                    </div>
                </div>
                <h4 style="margin-top:10px;">Registro de Origem</h4>
                <div class="row">
                    <div id="divFuncionario" class="divsTipo">
                        <div class="col-md-12">
                            @Html.HiddenFor(m => m.IdFuncionarioOrigem)
                            @Html.ValidationMessageFor(m => m.IdFuncionarioOrigem)
                            <div class="form-group">
                                <div class="input-group input-group-sm">
                                    @Html.TextBoxFor(m => m.FuncionarioOrigem, new { @class = "form-control  input-sm", id = "lkpFuncionarioOrigem", @type = "search", @autocomplete = "off" })
                                    <span class="input-group-btn">
                                        <button class="btn btn-primary" id="btnFuncionarioOrigem" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(m => m.FuncionarioOrigem)
                            </div>
                        </div>
                    </div>
                </div>
                <h4 style="margin-top:10px;">Registro de Destino</h4>
                <div>
                    @Html.HiddenFor(m => m.IdFuncionarioDestino)
                    @Html.ValidationMessageFor(m => m.IdFuncionarioDestino)
                </div>
                <div class="row">
                    @if (ViewBag.Consultar != 1)
                    {
                    <div id="divTbFuncionarioDestino">
                        @Html.GridFor("tbFun", (new Modelo.Proxy.pxyFuncionarioRelatorio()).GetType(), false, "TransferenciaBilhetes", "GetOutrosRegistrosFuncionario/" + Model.IdFuncionarioOrigem, "", "", Model.IdFuncionarioDestino.ToString(), "")
                    </div>
                    }
                    else
                    {
                        <div id="divFuncionarioDestino" class="divsTipo">
                            <div class="col-md-12">
                                @Html.HiddenFor(m => m.IdFuncionarioDestino)
                                <div class="form-group">
                                    <div class="input-group input-group-sm">
                                        @Html.TextBoxFor(m => m.FuncionarioDestino, new { @class = "form-control  input-sm", id = "lkpFuncionarioDestino", @type = "search", @autocomplete = "off" })
                                        <span class="input-group-btn">
                                            <button class="btn btn-primary" id="btnFuncionarioOrigem" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
            <div class="panel-footer">
                <div class="row">
                    <div class="col-xs-12 center-block">
                        <div style="text-align: right">
                            <button type="submit" id="btnTransferir" class="btn btn-primary salvando"><span class="fa fa-send"></span>&nbsp;Transferir</button>
                            <a class="btn btn-danger salvando"
                               href="@Url.Action("Grid", "TransferenciaBilhetes")">
                                <span class="glyphicon glyphicon-remove"></span> Cancelar
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    cwk_EventoConsulta("#btnFuncionarioOrigem", "#lkpFuncionarioOrigem", "EventoConsultaComInativos", "Funcionario", "", buscaFuncionariosDestino);

    $(document).ready(function () {
        buscaFuncionariosDestino();
    });

    function buscaFuncionariosDestino() {
        @if (ViewBag.Consultar != 1)
        { 
            <text>  
                CarregaDadosAjax("GridOutrosRegistrosFuncionario", "TransferenciaBilhetes", $('form').serialize(), "#divTbFuncionarioDestino", "#btnXls", "");
            </text>
        }
    }

    function formValido() {
        $("form").find(".field-validation-error").remove();

        $("#IdFuncionarioDestino").val(GetSelecionados('tbFun'));
        if ($("#IdFuncionarioDestino").val().length <= 0 || $("#IdFuncionarioDestino").val() == '' || $("#IdFuncionarioDestino").val() == null) {
            var msgErro = 'É necessário selecionar pelo menos um registro.';
            addErroInput("IdFuncionarioDestino", msgErro)
        }
        else {
            limpaErro("IdFuncionarioDestino");
        }

        if ($("form").valid() && PaginaValida()) {
            retorno = true;
        }
        else {
            retorno = false;
        }
        return retorno;
    }

    $('form').submit(function (event) {
        event.preventDefault();
        var _this = $(this);
        if (formValido()) {
            _this.unbind('submit').submit();
        }
        else {
            cwkErroTit("Não foi possível salvar o registro!", "A Página contém erros, verifique!");
            return false;
        }
    })
</script>

@if (ViewBag.Consultar == 1)
{
    <script>
        $(document).ready(function () {
            $('form').find('input, textarea, button, select').attr('disabled', 'disabled');
        })
    </script>
}