@model Modelo.Relatorios.RelatorioCartaoPontoModel
@using System.Web.Optimization

@{
    ViewBag.Title = "Relatório de Cartão Ponto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    <div class="">
        <div class="panel panel-default" style="padding:0px;margin-bottom:0">
            <div class="panel-heading">
                @Html.ActionLink("X", "Index", "Home", null, new { @class = "close" })
                <h3 class="panel-title titulo-pagina">Relatório de Cartão Ponto</h3>
            </div>
            <div class="panel-body panelConteudo" id="panelBodyFixodivCenter">
                @Html.HiddenFor(x => x.TipoSelecao)
                @Html.ValidationSummary(true)
                @Html.ValidationMessage("CustomError", new { id = "CustomError" })
                @Html.HiddenFor(model => model.TipoArquivo, new { id = "tipoArquivo" })
                <div>
                    <div class="row" style="padding-bottom:2px">
                        <div class="col-md-3">
                            <div class="panel panel-default">
                                <div class="panel-heading" style="padding-top:6px; padding-bottom:6px">
                                    <div class="row">
                                        <div class="col-md-2">
                                            @Html.LabelFor(model => model.TipoTurno, new { @class = "control-label label-sm" })
                                        </div>
                                    </div>
                                </div>
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group input-group-sm" style="margin-bottom:0">
                                                <div class="radio-inline" data-toggle="radio">
                                                    @Html.RadioButtonFor(model => model.TipoTurno, 0, new { id = "rdbAmb", name = "rdioTipoRel" })
                                                    <label class="label-sm" for="rdbAmb">Todos</label>
                                                </div>
                                                <div class="radio-inline" data-toggle="radio">
                                                    @Html.RadioButtonFor(model => model.TipoTurno, 1, new { id = "rdbNor", name = "rdioTipoRel" })
                                                    <label class="label-sm" for="rdbNor">Normal</label>
                                                </div>
                                                <div class="radio-inline" data-toggle="radio">
                                                    @Html.RadioButtonFor(model => model.TipoTurno, 2, new { id = "rdbFlx", name = "rdioTipoRel" })
                                                    <label class="label-sm" for="rdbFlx">Flexível</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="divPeriodo" class="col-md-3" style="padding-left:0">
                            <div class="panel panel-default" id="pnlData">
                                <div class="panel-heading" style="padding-top:5px; padding-bottom:5px">
                                    <div class="row">
                                        <div class="col-md-2"><label class="control-label label-sm">Período</label></div>
                                    </div>
                                </div>
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="row">
                                                <div class="col-md-5">
                                                    <div class="input-group input-group-sm" >
                                                        @Html.TextBoxFor(model => Model.InicioPeriodo, new { @class = "form-control input-sm MascDate datepickerpt", id = "InicioPeriodo" })
                                                        <span class="input-group-btn">
                                                            <button class="btn btn-primary" id="btnDtInicio" type="button"><span class="glyphicon glyphicon-calendar"></span></button>
                                                        </span>
                                                    </div>
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.Label("a", new { @class = "label-sm" })
                                                </div>
                                                <div class="col-md-5">
                                                    <div class="input-group input-group-sm" >
                                                        @Html.TextBoxFor(model => Model.FimPeriodo, new { @class = "form-control input-sm MascDate datepickerpt", id = "FimPeriodo" })
                                                        <span class="input-group-btn">
                                                            <button class="btn btn-primary" id="btnDtFim" type="button"><span class="glyphicon glyphicon-calendar"></span></button>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                @Html.HiddenFor(model => model.Intervalo)
                                                @Html.ValidationMessageFor(model => model.Intervalo)
                                                @Html.ValidationMessageFor(model => Model.InicioPeriodo)
                                                @Html.ValidationMessageFor(model => Model.FimPeriodo)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="panel panel-default">
                                <div class="panel-heading" style="padding-top:6px; padding-bottom:6px">
                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.Orientacao, new { @class = "control-label label-sm" })
                                        </div>
                                    </div>
                                </div>
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group input-group-sm" style="margin-bottom:0">
                                                <div class="radio-inline" data-toggle="radio">
                                                    @Html.RadioButtonFor(model => model.Orientacao, 0, new { id = "rdbRet", name = "rdioOrientacaoRel" })
                                                    <label class="label-sm" for="rdbRet">Retrato</label>
                                                </div>
                                                <div class="radio-inline" data-toggle="radio">
                                                    @Html.RadioButtonFor(model => model.Orientacao, 1, new { id = "rdbPai", name = "rdioOrientacaoRel" })
                                                    <label class="label-sm" for="rdbPai">Paisagem</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="panel panel-default">
                                <div class="panel-heading" style="padding-top:6px; padding-bottom:6px">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <label class="control-label label-sm">Funcionário</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="row">
                                                <div class="col-md-9">
                                                    <div class="form-group input-group-sm" style="margin-bottom:0">
                                                        <div class="radio-inline" data-toggle="radio">
                                                            <input type="radio" name="rdFuncionarioFiltro" value="0" />
                                                            <label class="label-sm" for="rdbRet">Inativo</label>
                                                        </div>
                                                        <div class="radio-inline" data-toggle="radio">
                                                            <input type="radio" name="rdFuncionarioFiltro" value="1" checked />
                                                            <label class="label-sm" for="rdbRet">Ativo</label>
                                                        </div>
                                                        <div class="radio-inline" data-toggle="radio">
                                                            <input type="radio" name="rdFuncionarioFiltro" value="2" />
                                                            <label class="label-sm" for="rdbRet">Ambos</label>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="form-group input-group-sm" style="margin-bottom:0">
                                                        <button class="btn btn-primary btn-xs" id="btnBuscarFiltro" type="button">Buscar</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @*Quebrada Automatica*@
                    <div class="row">
                        <div class="col-xs-6 center-block">
                            <div style="text-align: left">
                                <div class="checkbox" spellcheck="true">
                                    <label style="">
                                        @Html.CheckBoxFor(model => model.quebraAuto, new { @class = "checkbox", id = "CheckboxAuto" })
                                        @Html.Label("Quebra Automática (PDF)", new { @class = "control-label label-sm", @style = "font-weight:bold", @for = "quebraAuto" })
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            @Html.HiddenFor(x => x.IdSelecionados)
                            @Html.ValidationMessageFor(x => x.IdSelecionados)
                            <div class="row">
                                @Html.GridFor("tbFun", (new Modelo.Proxy.pxyFuncionarioRelatorio()).GetType(), true, "GetFuncsRel", "GetFunsVazioXaxo", "EventoFuncionarioRowCollor", "", null, "")
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            @Html.Partial("../JobManager/JobView")
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel-footer">
                <div class="row">
                    <div class="col-xs-6 center-block">
                        <div style="text-align: left">
                            <div class="checkbox" style="margin:0">
                                <label>
                                    @Html.CheckBoxFor(model => model.OrdenarPorDepartamento, new { id = "bOrdenaDepto" })
                                    @Html.LabelFor(model => model.OrdenarPorDepartamento, new { @class = "control-label label-sm", @for = "bOrdenaDepto" })
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-6 center-block">
                        <div style="text-align: right">
                            <button type="submit" id="btnPdf" class="btn btn-primary btnEnviar"><span class="fa fa-file-pdf-o"></span>&nbsp;Gerar PDF</button>
                            <button type="submit" id="btnXls" class="btn btn-primary btnEnviar"><span class="fa fa-file-excel-o"></span>&nbsp;Gerar Excel</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    var errorArray = new Array();
    cwk_DataCalendario('#btnDtInicio', '#InicioPeriodo');
    cwk_DataCalendario('#btnDtFim', '#FimPeriodo');
    $(document).ready(function () {
        $("#CheckboxAuto").prop('checked', true);
        $('.datepickerpt').datepicker().on('hide', function (ev) { EventoDatePicker(ev); });
        $('.datepickerpt').datepicker().on('hide', function (ev) {
            $("#pnlData").removeClass("panel-danger").removeClass("panel-success");
            $("#pnlData").addClass("panel-default");
            errorArray["Intervalo"] = null;
            $("form").validate().showErrors(errorArray);
            if ((this.id === "InicioPeriodo") && (($("#InicioPeriodo").val() !== null && $("#InicioPeriodo").val() !== "") && ($("#FimPeriodo").val() === null || $("#FimPeriodo").val() === ""))) {
                var inid = new Date(ev.date);
                endDate = new Date(ev.date);
                endDate.setDate(endDate.getDate() + 30);
                endDateString = ('0' + endDate.getDate()).slice(-2) + '/'
                                + ('0' + (endDate.getMonth() + 1)).slice(-2) + '/'
                                + endDate.getFullYear();
                $('#FimPeriodo').val(endDateString);
                $('#FimPeriodo').datepicker('update');
            }
//            validaPeriodo(this);
            validaPeriodoCartaoPontoMarcacao("#InicioPeriodo", "#FimPeriodo", "#pnlData", "Intervalo", "form");
        });

        $('#tbFun tbody').on('click', 'tr', function ()
        {
            errorArray["IdSelecionados"] = null;
            $("form").validate().showErrors(errorArray);
        });

        $("#btnBuscarFiltro").click(function () { EventoFuncionarioFiltro(); });
    });

    $("#btnPdf").click(function (event) {
        if (!validaForm()) {
            event.preventDefault();
        }
        else {
            $("#tipoArquivo").val("PDF");

        }
    });

    $("#btnXls").click(function (event) {
        if (!validaForm()) {
            event.preventDefault();
        }
        else {
            $("#tipoArquivo").val("Excel");
            mboxXls($('form'));
            event.preventDefault();
        }
    });

    $('form').submit(function (e) {
        e.preventDefault();
        if ($(this).valid()) {
            PostFormJob(this);
        }
        return false;
    });

    function validaForm() {
        $("#IdSelecionados").val(tbFunGetSelecionado());
        if ($("#IdSelecionados").val().length <= 0 || $("#IdSelecionados").val() == '' || $("#IdSelecionados").val() == null) {
            var msgErro = 'Para Imprimir o Cartão Ponto é Necessário Selecionar Pelo Menos um Funcionário.';
            errorArray["IdSelecionados"] = msgErro;
            cwkErro(msgErro);
            $("form").validate().showErrors(errorArray);
            return false;
        }
        else {
            errorArray["IdSelecionados"] = null;
            $("form").validate().showErrors(errorArray);
            return true;
        }
    }

    function EventoFuncionarioFiltro()
    {
        let x = $("input[name='rdFuncionarioFiltro']:checked").val();
        let y = '/GetFuncsRel/GetFunsComParms';
        EventoFuncionarioFiltroRequest(x,y);
    }

    function EventoDatePicker(ev)
    {
        $("#pnlData").removeClass("panel-danger").removeClass("panel-success");
        $("#pnlData").addClass("panel-default");
        errorArray["Intervalo"] = null;
        $("form").validate().showErrors(errorArray);
        if ((this.id == "InicioPeriodo") && (($("#InicioPeriodo").val() != null && $("#InicioPeriodo").val() != "") && ($("#FimPeriodo").val() == null || $("#FimPeriodo").val() == ""))) {
            var inid = new Date(ev.date);
            endDate = new Date(ev.date);
            endDate.setDate(endDate.getDate() + 30);
            endDateString = ('0' + endDate.getDate()).slice(-2) + '/'
                + ('0' + (endDate.getMonth() + 1)).slice(-2) + '/'
                + endDate.getFullYear();
            $('#FimPeriodo').val(endDateString);
            $('#FimPeriodo').datepicker('update');
        }
        validaPeriodoCartaoPontoMarcacao("#InicioPeriodo", "#FimPeriodo", "#pnlData", "Intervalo", "form");
    }
   
</script>
