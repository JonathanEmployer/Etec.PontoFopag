@model Modelo.Feriado
@{
    ViewBag.Title = "Cadastrar Feriado";
    bool integrado = false;
    if (Model.IdIntegracao.GetValueOrDefault() > 0 && ViewBag.BloqueiaDadosIntegrados)
    {
        integrado = true;
    }
}

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.Id, new { id = "idFeriado" });
    @Html.HiddenFor(model => model.Incdata);
    @Html.HiddenFor(model => model.Data_Ant);
    @Html.HiddenFor(model => model.ParcialAnt);
    @Html.HiddenFor(model => model.HoraInicioAnt);
    @Html.HiddenFor(model => model.HoraFimAnt);
    @Html.HiddenFor(model => model.TipoFeriado_Ant);
    @Html.HiddenFor(model => model.NaoRecalcular);
    @Html.HiddenFor(model => model.Inchora);
    @Html.HiddenFor(model => model.Incusuario);
    @Html.HiddenFor(model => model.Altdata);
    @Html.HiddenFor(model => model.Althora);
    @Html.HiddenFor(model => model.Altusuario);

    <div class="" style="max-height:500px; margin-bottom:0px;">
        <div class="panel panel-default" style="padding:0">
            <div class="panel-heading salvando">
                @Html.ActionLink("X", "Grid", "Feriado", null, new { @class = "close" })
                <h3 class="panel-title titulo-pagina">@ViewBag.Title</h3>
            </div>
            <div class="panel-body panelConteudo" id="panelBodyMaximo">
                @Html.Raw(HttpUtility.HtmlDecode(@Html.ValidationMessage("CustomError").ToHtmlString()))
                @if (!String.IsNullOrEmpty(@ViewBag.MensagemFechamento))
                {
                    <div class="comment alert alert-info" role="alert" style="margin-bottom:0">@Html.Raw(ViewBag.MensagemFechamento)</div>
                }
                <div class="row">
                    <div class="col-md-2">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Codigo, new { @class = "control-label label-sm" })
                            @Html.TextBoxFor(model => model.Codigo, new { @class = "form-control  input-sm" }).IsReadonly(integrado)
                            @Html.ValidationMessageFor(model => model.Codigo)
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Descricao, new { @class = "control-label label-sm" })
                            @Html.TextBoxFor(model => model.Descricao, new { @class = "form-control  input-sm" }).IsReadonly(integrado)
                            @Html.ValidationMessageFor(model => model.Descricao)
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group input-group-sm">
                            @Html.LabelFor(model => model.Data, new { @class = "control-label label-sm" })
                            <div class="input-group input-group-sm">
                                @Html.TextBoxFor(model => model.Data, new { @class = "form-control input-sm MascDate datepickerpt", id = "Data" }).IsReadonly(integrado)
                                <span class="input-group-btn">
                                    <button class="btn btn-primary" id="btnFeriado" type="button"><span class="glyphicon glyphicon-calendar"></span></button>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.Data)
                        </div>
                    </div>

                    <div class="col-md-2">
                        @Html.LabelFor(model => model.Parcial, new { @class = "control-label label-sm", @for = "Parcial" })
                        <div class="input-group input-group-sm">
                            <span class="input-group-addon">
                                @Html.CheckBoxFor(model => model.Parcial)
                            </span>
                            @Html.TextBoxFor(model => model.HoraInicio, new { @class = "form-control  input-sm time", placeholder = "00:00" }).IsReadonly(integrado)
                            <span class="input-group-addon">
                                <span class="" aria-hidden="true">
                                    <b>a</b>
                                </span>
                            </span>
                            @Html.TextBoxFor(model => model.HoraFim, new { @class = "form-control  input-sm time", placeholder = "12:00" }).IsReadonly(integrado)
                        </div>
                        @Html.ValidationMessageFor(model => model.HoraInicio)
                        @Html.ValidationMessageFor(model => model.HoraFim)
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.TipoFeriado, new { @class = "control-label label-sm" })
                            </div>
                            <div class="col-md-11">
                                <div class="row">
                                    <div class="form-group input-group-sm">
                                        <div class="col-md-3">
                                            <div class="radio-inline" data-toggle="radio">
                                                @Html.RadioButtonFor(model => model.TipoFeriado, 0, new { id = "idRadioGeral", name = "rdio" })
                                                @Html.Label("lbGeral", "Geral", new { @class = "control-label label-sm", @for = "idRadioGeral" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="radio-inline" data-toggle="radio">
                                                @Html.RadioButtonFor(model => model.TipoFeriado, 1, new { id = "idRadioEmpresa", name = "rdio" })
                                                @Html.Label("lbEmpresa", "Empresa", new { @class = "control-label label-sm", @for = "idRadioEmpresa" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="radio-inline" data-toggle="radio">
                                                @Html.RadioButtonFor(model => model.TipoFeriado, 2, new { id = "idRadioDepto", name = "rdio" })
                                                @Html.Label("lbDepartamento", "Departamento", new { @class = "control-label label-sm", @for = "idRadioDepto" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="radio-inline" data-toggle="radio">
                                                @Html.RadioButtonFor(model => model.TipoFeriado, 3, new { id = "idRadioFuncionario", name = "rdio" })
                                                @Html.Label("lbFuncionario", "Funcionário", new { @class = "control-label label-sm", @for = "idRadioFuncionario" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.TipoFeriado)
                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div id="divEmpDep">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Empresa, new { @class = "control-label label-sm" })
                                        <div class="input-group input-group-sm">
                                            @Html.TextBoxFor(model => model.Empresa, new { @class = "form-control  input-sm", id = "lkpEmpresa" })
                                            <span class="input-group-btn">
                                                <button class="btn btn-primary" id="btnEmpresa" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                            </span>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Empresa)
                                    </div>
                                </div>
                                <div class="row"> </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Departamento, new { @class = "control-label label-sm" })
                                        <div class="input-group input-group-sm">
                                            @Html.TextBoxFor(model => model.Departamento, new { @class = "form-control  input-sm", id = "lkpDepart" })
                                            <span class="input-group-btn">
                                                <button class="btn btn-primary" id="btnDepart" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                            </span>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Departamento)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                @Html.HiddenFor(m => m.IdsFeriadosFuncionariosSelecionados)
                                @Html.HiddenFor(m => m.IdsFeriadosFuncionariosSelecionados_Ant)
                                @Html.ValidationMessageFor(m => m.IdsFeriadosFuncionariosSelecionados)
                            </div>
                            <div class="col-md-12" id="divPartial">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel-footer">
                <div class="row">
                    <div class="col-xs-12 center-block">
                        <div style="text-align: right">
                            <button type="submit" class="btn btn-success salvando">
                                <span class="glyphicon glyphicon-ok-circle"></span> &nbsp;Salvar&nbsp;&nbsp;
                            </button>
                            <a class="btn btn-danger"
                               href="@Url.Action("Grid", "Feriado")">
                                <span class="glyphicon glyphicon-remove salvando"></span> Cancelar
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script>
    var errorArray = new Array();
    $(document).ready(function () {
        $("#divEmpDep").hide();
        $("#divPartial").hide();

        cwk_EventoConsulta("#btnDepart", "#lkpDepart", "EventoConsulta", "Departamento", "#lkpEmpresa");
        cwk_EventoConsulta("#btnEmpresa", "#lkpEmpresa", "EventoConsulta", "Empresa", "");

        cwk_DataCalendario('#btnFeriado', '#Data');

        if ($('#idRadioGeral').is(':checked')) {
            $("#divEmpDep").show();
            $("#divPartial").hide();
            $("#lkpEmpresa").val("");
            $("#lkpEmpresa").prop('disabled', true);
            $("#btnEmpresa").prop('disabled', true);
            $("#lkpDepart").val("");
            $("#lkpDepart").prop('disabled', true);
            $("#btnDepart").prop('disabled', true);
        }

        if ($('#idRadioEmpresa').is(':checked')) {
            $("#divEmpDep").show();
            $("#divPartial").hide();
            $("#lkpEmpresa").prop('disabled', false);
            $("#btnEmpresa").prop('disabled', false);
            $("#lkpDepart").val("");
            $("#lkpDepart").prop('disabled', true);
            $("#btnDepart").prop('disabled', true);
        };

        if ($('#idRadioDepto').is(':checked')) {
            $("#divEmpDep").show();
            $("#divPartial").hide();
            $("#lkpEmpresa").prop('disabled', false);
            $("#btnEmpresa").prop('disabled', false);
            $("#lkpDepart").prop('disabled', false);
            $("#btnDepart").prop('disabled', false);
        };

        if ($('#idRadioFuncionario').is(':checked')) {
            $("#divEmpDep").hide();
            $("#divPartial").show();
            $("#lkpEmpresa").val("");
            $("#lkpEmpresa").prop('disabled', true);
            $("#btnEmpresa").prop('disabled', true);
            $("#lkpDepart").val("");
            $("#lkpDepart").prop('disabled', true);
            $("#btnDepart").prop('disabled', true);
            CarregaGridFuncionario();
        };

        $(function () {
            $('.nav-tabs a').on('removeAttr', function (e) {
                e.preventDefault();
                $(this).tab('show');
            });
        });
        verificaParcial();
    });


    $("#idRadioGeral").change(function () {
        $("#divEmpDep").show();
        $("#divPartial").hide();
        $("#lkpEmpresa").val("");
        $("#lkpEmpresa").prop('disabled', true);
        $("#btnEmpresa").prop('disabled', true);
        $("#lkpDepart").val("");
        $("#lkpDepart").prop('disabled', true);
        $("#btnDepart").prop('disabled', true);
        limpaErro("IdsFeriadosFuncionariosSelecionados");
    });

    $("#idRadioEmpresa").change(function () {
        $("#divEmpDep").show();
        $("#divPartial").hide();
        $("#lkpEmpresa").val("");
        $("#lkpEmpresa").prop('disabled', false);
        $("#btnEmpresa").prop('disabled', false);
        $("#lkpDepart").val("");
        $("#lkpDepart").prop('disabled', true);
        $("#btnDepart").prop('disabled', true);
        limpaErro("IdsFeriadosFuncionariosSelecionados");
    });

    $("#idRadioDepto").change(function () {
        $("#divEmpDep").show();
        $("#divPartial").hide();
        $("#lkpEmpresa").val("");
        $("#lkpEmpresa").prop('disabled', false);
        $("#btnEmpresa").prop('disabled', false);
        $("#lkpDepart").val("");
        $("#lkpDepart").prop('disabled', false);
        $("#btnDepart").prop('disabled', false);
        limpaErro("IdsFeriadosFuncionariosSelecionados");
    });

    $("#idRadioFuncionario").change(function () {
        $("#divEmpDep").hide();
        $("#divPartial").show();
        $("#lkpEmpresa").prop('disabled', true);
        $("#btnEmpresa").prop('disabled', true);
        $("#lkpDepart").val("");
        $("#lkpDepart").prop('disabled', true);
        $("#btnDepart").prop('disabled', true);
        CarregaGridFuncionario();
    });

    function CarregaGridFuncionario() {
        E_GridFunc('#divPartial', '#IdsFeriadosFuncionariosSelecionados', "");
    }

    $("#lkpEmpresa").change(function () {
        $('#lkpDepart').val('');
    });

    $(":input[type='text']:enabled:visible:first").focus();

    $('form').submit(function () {
        if ($(this).valid() && validaForm()) {
            return true;
        }
        return false;
    });

    function validaForm() {
        if ($('#idRadioFuncionario').is(':checked')) {
            $("#IdsFeriadosFuncionariosSelecionados").val(E_GridFuncGetSelecionados());
            var funcsSelecionados = $("#IdsFeriadosFuncionariosSelecionados").val();
            if (funcsSelecionados.length <= 0 || funcsSelecionados == '' || funcsSelecionados == null) {
                var msgErro = 'É Necessário Selecionar Pelo Menos um Funcionário.';
                errorArray["IdsFeriadosFuncionariosSelecionados"] = msgErro;
                cwkErro(msgErro);
                $("form").validate().showErrors(errorArray);
                return false;
            }
            else {
                errorArray["IdsFeriadosFuncionariosSelecionados"] = null;
                $("form").validate().showErrors(errorArray);
                return true;
            }
        }
        return true;
    }

    $("#Parcial").click(function () {
        verificaParcial();
    });
    function verificaParcial() {
        if ($("#Parcial").is(':checked')) {
            $("#HoraInicio, #HoraFim").prop("disabled", false);
        }
        else {
            $("#HoraInicio, #HoraFim").prop("disabled", true);
        }
    }
     
</script>
@if (ViewBag.Consultar == 1)
{
    <script>
        $(document).ready(function () {
            $('form').find('input, textarea, button, select').attr('disabled', 'disabled');
        })
    </script>
}