@model Modelo.FechamentoPonto
@using System.Web.Optimization

@{
    ViewBag.Title = "Fechamento Ponto";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string nomeTabela = "tbFechamentoPonto";
}
<div class="">
    <div class="panel panel-default" style="padding:0; margin-bottom:0px;">
        <div class="panel-heading">
            @Html.ActionLink("X", "Index", "Home", null, new { @class = "close" })
            <h3 class="panel-title titulo-pagina">@ViewBag.Title</h3>
        </div>
        <div class="panel-body panelConteudo" id="panelBodyFixo">
            @Html.ValidationSummary(true)
            <div class="row">
                @Html.GridFor(nomeTabela, Model.GetType(), false, "FechamentoPonto", "DadosGrid")
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.Partial("../JobManager/JobView")
                </div>
            </div>
        </div>

        <div class="panel-footer">
            <div class="row">
                <div class="col-xs-12 center-block">
                    <div style="text-align: right">
                        <a href="#" id="btConsultar" class="btn btn-info"><span class="glyphicon glyphicon-search"></span>&nbsp;Consultar</a>
                        <a href="#" id="btIncluir" class="btn btn-success"><span class="glyphicon glyphicon-plus"></span>&nbsp;Adicionar</a>
                        <a href="#" id="btAlterar" class="btn btn btn-primary"><span class="glyphicon glyphicon-pencil"></span>&nbsp;Alterar</a>
                        <a href="#" id="btExcluir" class="btn btn-danger"><span class="glyphicon glyphicon-trash"></span>&nbsp;Excluir</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/paginajs")

<script>
    var controller = 'FechamentoPonto';
    var nomeTabela = "#" + '@nomeTabela';

    $(document).ready(function () {
        const objFunctions = new cwkFechamentoPonto(controller, nomeTabela);

        //cwk_EventoDbClickEditar('Alterar', controller, nomeTabela);
        cwk_EventoClickCadastroAdicionar('#btIncluir', 'Cadastrar', controller);
        /*cwk_EventoClickCadastroAlterar('#btAlterar', 'Alterar', controller, nomeTabela);*/
        cwk_EventoClickCadastroAlterar('#btConsultar', 'Consultar', controller, nomeTabela);
        //cwk_EventoClickCadastroExcluir('#btExcluir', 'Excluir', controller, nomeTabela, 'Fechamento excluído com sucesso.');

        $(nomeTabela + ' tbody').on('dblclick', 'tr', function () {
            var id = GetIdSelecionadoTable(nomeTabela);
            objFunctions
                .ValidaJob(id)
                .then(() => ChamaCadastro(controller, 'Alterar', id))
        });

        $("#btAlterar").click(function (event) {
            var id = GetIdSelecionadoTable(nomeTabela);
            if (id > 0) {
                objFunctions
                    .ValidaJob(id)
                    .then(objFunctions.Editar)
            } else {
                cwkErroTit('Selecione um Registro!', 'Antes de excluir um registro é necessário selecioná-lo!');
            }
            event.preventDefault();
        });

        $("#btExcluir").click(function (event) {
            $("#btExcluir").prop("disabled", true);
            objFunctions.Excluir();
            event.preventDefault();
        });
    });

    //function Excluir() {
    //    var id = GetIdSelecionadoTable(nomeTabela);
    //    if (id > 0) {
    //        ValidaJob(id)
    //            .then(ValidaFechamento)
    //            .then((resp) => {
    //                if (!resp.isValid) {
    //                    return dialogConfirmSave(resp.title, resp.message);
    //                }
    //                return true;
    //            })
    //            .then((res) => {
    //                var objetoTabela = $(nomeTabela).closest('table').DataTable();
    //                ajax_ExcluirRegistro('Excluir', controller, id, 'Fechamento excluído com sucesso.', objetoTabela);
    //            })
    //            .finally(() => $("#btExcluir").prop("disabled", false));
    //    } else {
    //        cwkErroTit('Selecione um Registro!', 'Antes de excluir um registro é necessário selecioná-lo!');
    //    }
    //}

    //function ValidaFechamento(id) {
    //    return new Promise((res, rej) => {
    //        $.ajax({
    //            dataType: "json",
    //            type: "POST",
    //            url: "/FechamentoPonto/ValidaFechamento",
    //            data: {
    //                'obj': { 'id': id },
    //                'idsSelecionados': [],
    //                '__RequestVerificationToken': gettoken()
    //            },
    //            success: function (resp) {
    //                res(resp);
    //            }
    //        }).fail(function (jqXHR, exception) {
    //            // Our error logic here
    //            var msg = '';
    //            if (jqXHR.status === 0) {
    //                msg = 'Verifique a conexão com a internet.';
    //            } else if (jqXHR.status == 404) {
    //                msg = 'Erro na requisição';
    //            } else if (jqXHR.status == 500) {
    //                msg = 'Erro Interno.';
    //            } else if (exception === 'parsererror') {
    //                msg = 'Erro ao converter requisição.';
    //            } else if (exception === 'timeout') {
    //                msg = 'Tempo Excedido.';
    //            } else if (exception === 'abort') {
    //                msg = 'Requisição Cancelada.';
    //            } else {
    //                msg = 'Erro: ' + jqXHR.responseText;
    //            }
    //            cwkErro(msg);
    //            rej(msg);
    //        });
    //    });
    //}

    //function ValidaJob(id) {
    //    return new Promise((res, rej) => {
    //        $.ajax({
    //            dataType: "json",
    //            type: "GET",
    //            url: "/FechamentoPonto/ValidaJob",
    //            data: {
    //                'id': id,
    //            },
    //            success: function (resp) {
    //                if (resp.isValid) {
    //                    res(id);
    //                }
    //                else {
    //                    cwkNotificacao('Integração em andamento, por favor aguarde.')
    //                    rej();
    //                }
    //            }
    //        })
    //            .fail(function (jqXHR, exception) {
    //                // Our error logic here
    //                var msg = '';
    //                if (jqXHR.status === 0) {
    //                    msg = 'Verifique a conexão com a internet.';
    //                } else if (jqXHR.status == 404) {
    //                    msg = 'Erro na requisição';
    //                } else if (jqXHR.status == 500) {
    //                    msg = 'Erro Interno.';
    //                } else if (exception === 'parsererror') {
    //                    msg = 'Erro ao converter requisição.';
    //                } else if (exception === 'timeout') {
    //                    msg = 'Tempo Excedido.';
    //                } else if (exception === 'abort') {
    //                    msg = 'Requisição Cancelada.';
    //                } else {
    //                    msg = 'Erro: ' + jqXHR.responseText;
    //                }
    //                cwkErro(msg);
    //                rej();
    //            });
    //    });
    //}

    //function dialogConfirmSave(title, msg) {
    //    return new Promise((res, rej) => {
    //        bootbox.dialog({
    //            message: msg,
    //            title: title,
    //            closeButton: false,
    //            buttons: {
    //                success: {
    //                    label: "Sim",
    //                    className: "btn-primary",
    //                    callback: res
    //                },
    //                danger: {
    //                    label: "Cancelar",
    //                    className: "btn-default",
    //                    callback: rej
    //                }
    //            }
    //        });
    //    });
    //}
</script>
