@model Modelo.JornadaSubstituir
@{
    ViewBag.Title = "Cadastrar Substituição";
}
@using (Html.BeginForm())
{
    <div class="divCenter">
        <div class="panel panel-default" style="padding:0">
            <div class="panel-heading salvando">
                @Html.ActionLink("X", "Grid", "JornadaSubstituir", null, new { @class = "close" })
                <h3 class="panel-title titulo-pagina">@ViewBag.Title</h3>
            </div>
            <div class="panel-body panelConteudo" id="panelBodyMaximo">
                @Html.HiddenFor(x => x.Id)
                @Html.HiddenFor(model => model.Incdata)
                @Html.HiddenFor(model => model.Inchora)
                @Html.HiddenFor(model => model.Incusuario)
                @Html.HiddenFor(model => model.Altdata)
                @Html.HiddenFor(model => model.Althora)
                @Html.HiddenFor(model => model.Altusuario)

                @Html.HiddenFor(x => x.IdJornadaPara)
                @Html.HiddenFor(x => x.IdJornadaPara)
                @Html.HiddenFor(x => x.IdFuncsSelecionados)
                @Html.ValidationMessage("CustomError")

                @if (ViewBag.JornadasConflitantes != null)
                {
                    <div class="panel panel-danger fade in collapse" id="pnlJC">
                        <div class="panel-heading">
                            @if (Model.Id == 0)
                            {
                                <text>Inclusão esta conflitando com outros lançamentos</text>
                            }
                            else
                            {
                                <text>Alteração esta conflitando com outros lançamentos</text>
                            }
                            <a data-toggle="collapse" href="#pnlJC" class="close">&times </a>
                        </div>
                        <div class="panel-body" >
                            <div style="max-height:100px; overflow-y: scroll;">
                                @foreach (string erro in ViewBag.JornadasConflitantes)
                                {
                                    <p> @erro </p>
                                }
                            </div>
                        </div>
                    </div>
                }
                @if (ViewBag.Fechamentos != null)
                {
                    <div class="panel panel-danger fade in collapse" id="pnlFechamento">
                        <div class="panel-heading">
                            @if (Model.Id == 0)
                            {
                                <text>Registro não pode ser incluído pois existem fechamentos</text>
                            }
                            else
                            {
                                <text>Registro não pode ser alterado pois existem fechamentos</text>
                            }
                            <a data-toggle="collapse" href="#pnlFechamento" class="close">&times </a>
                        </div>
                        <div class="panel-body" style="max-height:300px;">
                            @foreach (string erro in ViewBag.Fechamentos)
                            {
                                <p> @erro </p>
                            }
                        </div>
                    </div>
                }
                <div class="row">
                    <div class="col-md-2">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Codigo, new { @class = "control-label label-sm" })
                            @Html.TextBoxFor(model => model.Codigo, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.Codigo)
                        </div>
                    </div>
                    <div class="col-md-4">
                        @Html.Partial("_Periodo", new Modelo.Proxy.PxyPeriodo() { DataInicio = Model.DataInicio, DataFim = Model.DataFim })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DescricaoDe, new { @class = "control-label label-sm" })
                            <div class="input-group input-group-sm">
                                @Html.TextBoxFor(model => model.DescricaoDe, new { @class = "form-control  input-sm", id = "lkpDescricaoDe" })
                                <span class="input-group-btn">
                                    <button class="btn btn-primary" id="btnDescricaoDe" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.DescricaoDe)
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DescricaoPara, new { @class = "control-label label-sm" })
                            <div class="input-group input-group-sm">
                                @Html.TextBoxFor(model => model.DescricaoPara, new { @class = "form-control  input-sm", id = "lkpDescricaoPara" })
                                <span class="input-group-btn">
                                    <button class="btn btn-primary" id="btnDescricaoPara" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.DescricaoPara)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        @Html.ValidationMessageFor(model => model.IdFuncsSelecionados)
                    </div>
                    @Html.GridFor("tbFun", (new Modelo.Proxy.pxyFuncionarioRelatorio()).GetType(), true, "GetFuncsRel", "GetFuns", "", "", Model.IdFuncsSelecionados, "")
                </div>
            </div>
            <div class="panel-footer">
                <div class="row">
                    <div class="col-xs-12 center-block">
                        <div style="text-align: right">
                            <button type="submit" class="btn btn-success salvando">
                                <span class="glyphicon glyphicon-ok-circle"></span> &nbsp;Salvar&nbsp;&nbsp;
                            </button>
                            <a class="btn btn-danger salvando"
                               href="@Url.Action("Grid", "JornadaSubstituir")">
                                <span class="glyphicon glyphicon-remove"></span> Cancelar
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    var errorArray = new Array();
    cwk_EventoConsulta("#btnDescricaoDe", "#lkpDescricaoDe", "EventoConsulta", "Jornada", "", "");
    cwk_EventoConsulta("#btnDescricaoPara", "#lkpDescricaoPara", "EventoConsulta", "Jornada", "", "");

    $('form').submit(function () {
        if ($(this).valid() && validaForm()) {
            return true;
        }
        return false;
    });

    function validaForm() {
        $("#IdFuncsSelecionados").val(E_GridFuncGetSelecionados());
        if ($("#IdFuncsSelecionados").val() == null || $("#IdFuncsSelecionados").val() == '' || $("#IdFuncsSelecionados").val().length <= 0)
        {
            var msgErro = 'É necessário selecionar pelo menos um funcionário';
            errorArray["IdFuncsSelecionados"] = msgErro;
            cwkErro(msgErro);
            $("form").validate().showErrors(errorArray);
            return false;
        }
        else {
            limpaErro("IdFuncsSelecionados");
            return true;
        }
    }
</script>

@if (ViewBag.Consultar == 1)
{
    <script>
        $(document).ready(function () {
            $('form').find('input, textarea, button, select').attr('disabled', 'disabled');
        })
    </script>
}