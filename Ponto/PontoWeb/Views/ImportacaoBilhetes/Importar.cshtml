@model Modelo.Proxy.pxyImportacaoBilhetes
@{
    ViewBag.Title = "Importação de AFD";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string acao;
}

@using (Html.BeginForm("Importar", "ImportacaoBilhetes", FormMethod.Post, new { id = "FormImportar" }))
{
    @Html.AntiForgeryToken()
    <div class="divCenterMedio">
        <div class="panel panel-default" style="padding:0">
            <div class="panel-heading salvando">
                @Html.ActionLink("X", "Index", "Home", null, new { @class = "close" })
                <h3 class="panel-title titulo-pagina">@ViewBag.Title</h3>
            </div>
            <div class="panel-body panelConteudo" id="panelBodyMaximo">
                @Html.ValidationMessage("CustomError")
                @Html.HiddenFor(x => x.IdRep)
                <div class="panel panel-default" id="pnlFiltroImportacao" style="margin-top:7px; padding-top:0px;">
                    <div class=" panel-heading" style="margin-top:0; margin-bottom:0; padding-top:0; padding-bottom:0px;">Filtro de Importação</div>
                    <div class="panel-body" style="margin-top:0; margin-bottom:0; padding-top:5px; padding-bottom:5px;">
                        <div class="row">
                            <div class="col-md-3">
                                <div class="panel panel-default" id="pnlData" style="margin-top:0; padding-top:0px;">
                                    <div class=" panel-heading" style="margin-top:0; margin-bottom:0; padding-top:0; padding-bottom:0px;">Período</div>
                                    <div class="panel-body" style="margin-top:0; margin-bottom:0; padding-top:0; padding-bottom:5px;">
                                        <div class="row">
                                            <div class="form-group">
                                                <div class="form-group input-group-sm">
                                                    <div class="col-md-12">
                                                        <div class="input-group input-group-sm">
                                                            @Html.TextBoxFor(model => model.DataInicial, new { @class = "form-control input-sm MascDate datepickerpt", id = "DataInicial" })
                                                            <span class="input-group-btn">
                                                                <button class="btn btn-primary btndatepicker" id="btnDataInicial" type="button" title="Data Inicial"><span class="glyphicon glyphicon-calendar"></span></button>
                                                            </span>
                                                        </div>
                                                        @Html.ValidationMessageFor(model => model.DataInicial)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group">
                                                <div class="form-group input-group-sm">
                                                    <div class="col-md-12">
                                                        <div class="input-group input-group-sm">
                                                            @Html.TextBoxFor(model => model.DataFinal, new { @class = "form-control input-sm MascDate datepickerpt col-md-8", id = "DataFinal" })
                                                            <span class="input-group-btn">
                                                                <button class="btn btn-primary btndatepicker" id="btnDataFinal" type="button" title="Data Final"><span class="glyphicon glyphicon-calendar"></span></button>
                                                            </span>
                                                        </div>
                                                        @Html.ValidationMessageFor(model => model.DataFinal)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-9">
                                <div class="row">
                                    <div class="col-md-3">
                                        <span class="btn btn-primary btn-sm fileinput-button">
                                            <i class="glyphicon glyphicon-upload"></i>
                                            <span>Selecionar Arquivo...</span>
                                            <input id="fileupload" type="file">
                                        </span>
                                    </div>
                                    <div class="col-md-9">

                                        <div class="input-group input-group-sm">
                                            @Html.TextBoxFor(model => model.NomeArquivo, new { id = "nome_arquivo", @class = "form-control input-sm", @readonly = true })
                                            <span class="input-group-addon label-default" id="spanResultArquivo"><span style="color:white"><i id="iconeResultArquivo" class="glyphicon glyphicon-paperclip"></i></span></span>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.NomeArquivo)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="progress" style="margin-bottom:5px">
                                            <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
                                                <span class="sr-only">0% complete</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="checkbox">
                                            <label>
                                                @Html.CheckBoxFor(model => model.bRazaoSocial, new { id = "bRazaoSocial" })
                                                @Html.LabelFor(model => model.bRazaoSocial, new { @class = "control-label label-sm" })
                                                @Html.ValidationMessageFor(model => model.bRazaoSocial)
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="checkbox">
                                            <label>
                                                @Html.CheckBoxFor(model => model.bMarcacaoIndividual, new { id = "bMarcacaoIndividual" })
                                                @Html.LabelFor(model => model.bMarcacaoIndividual, new { @class = "control-label label-sm" })
                                                @Html.ValidationMessageFor(model => model.bMarcacaoIndividual)
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.NomeFuncionarioSelecionado, new { @class = "control-label label-sm editor-label" })
                                            <div class="input-group input-group-sm">
                                                @Html.TextBoxFor(model => model.NomeFuncionarioSelecionado, new { @class = "form-control input-sm lkpNomeFuncionarioSelecionado editor-field", id = "lkpNomeFuncionarioSelecionado" })
                                                <span class="input-group-btn">
                                                    <button class="btn btn-primary lkpNomeFuncionarioSelecionado " id="btnNomeFuncionarioSelecionado" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                                </span>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.NomeFuncionarioSelecionado)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div id="divTbLogImportacaoArquivo">

                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        @Html.Partial("../JobManager/JobView")
                    </div>
                </div>
            </div>
            <div class="panel-footer">
                <div class="row">
                    <div class="col-xs-12 center-block row">

                        <div class="col-xs-6 center-block" style="text-align: left">
                            <button type="submit" id="btnImportados" title="Consultar Arquivos Importados" onclick="CarregarGridLogImportacaoAFD()" class="btn btn-info">
                                <i class="fa fa-search" aria-hidden="true"></i> Consultar Arquivos Importados
                            </button>
                        </div>
                        <div class="col-xs-6 center-block" style="text-align: right">
                            <button type="submit" id="btnImpBil" title="Gerar Arquivo" class="btn btn-success">
                                <span class="glyphicon glyphicon-save"></span> Importar Arquivo
                            </button>
                            <a style="text-align: right" class="btn btn-danger"
                               href="@Url.Action("Index", "Home")">
                                <span class="glyphicon glyphicon-remove salvando"></span> Cancelar
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script>
    var multiplicador = 17;
    var larguraRes = window.innerWidth || document.body.clientWidth;
    var larguraGrid = "100%";
    var acao = "DadosGridLogImportacao?dataIni={0}&dataFim={1}";
    acao = acao.replace("{0}", ConvertDateToStringYMD($("#DataInicial").val()));
    acao = acao.replace("{1}", ConvertDateToStringYMD($("#DataFinal").val()));
 
    if (larguraRes <= 1024) {
        larguraGrid = '1100px';
    }

    var altura = cwk_AlturaTela() * multiplicador / 100;
    if (cwk_AlturaTela() <= 768) {
        altura = cwk_AlturaTela() * multiplicador / 100;
    }
    var oTb = cwk_MontarDataTableTheme('#tbREP', 'Rep', false, altura, larguraGrid);

    $("#pnlFiltroImportacao").addClass("panel-default");

    if ($("#bMarcacaoIndividual").is(':checked')) {
        $('#lkpNomeFuncionarioSelecionado').prop('readonly', false);
    }
    else {
        $('#lkpNomeFuncionarioSelecionado').prop('readonly', true);
    }

    $(".lkpNomeFuncionarioSelecionado").bind("keydown click", function (e) {
        if ($("#bMarcacaoIndividual").is(':checked')) {
            cwk_EventoConsultaUnico(e, this, "", "Funcionario", "");
        }
    });

    if ($("#bRazaoSocial").is(':checked')) {
        $('#lkpRazaoSocialCliente').prop('readonly', false);
    }
    else {
        $('#lkpRazaoSocialCliente').prop('readonly', true);
    }

    $(".lkpRazaoSocialCliente").bind("keydown click", function (e) {
        if ($("#bRazaoSocial").is(':checked')) {
            cwk_EventoConsultaUnico(e, this, "", "Funcionario", "");
        }
    });

    $(document).ready(function () {
        cwk_DataCalendario('#btnDataInicial', '#DataInicial');
        cwk_DataCalendario('#btnDataFinal', '#DataFinal');

        $('.datepicker').datepicker().on('hide', function (ev) {
            var errorArray = {};
            errorArray["intervalo"] = null;
            $("#FormExportar").validate().showErrors(errorArray);

            if (($("#DataInicial").val() != null && $("#DataInicial").val() != "") && ($("#DataFinal").val() != null && $("#DataFinal").val() != "")) {
                var dias = diasPeriodo($("#DataInicial").val(), $('#DataFinal').val());
                if (dias <= 0) {
                    errorArray["intervalo"] = 'Data Inicial deve ser menor que a Final';
                    $("form").validate().showErrors(errorArray);
                }
            }
        });

        $('#fileupload').fileupload({
            //Fazer validação para não deixar importar durante o upload
            dataType: 'json',
            url: '/ImportacaoBilhetes/UploadArquivos',
            autoUpload: true,
            add: function (e, data) {
                $("#btnImpBil").prop("disabled", true);
                $("#btnImpBil").html("Aguarde...");
                limpaErro("NomeArquivo");
                var uploadErrors = [];

                var acceptFileTypes = /^text\/plain$/i;
                if (data.originalFiles[0]['type'].length && !acceptFileTypes.test(data.originalFiles[0]['type'])) {
                    uploadErrors.push('É aceito apenas arquivo no formato txt.');
                }

                if (uploadErrors.length > 0) {
                    cwkErroTit("Erro no arquivo selecionado!", uploadErrors.join("\n"));
                } else {
                    data.submit();
                }

            },
            done: function (e, data) {
                $('#nome_arquivo').val(data.result.nome);
                $('.progress .progress-bar').css('width', 0 + '%');
                ValidaArquivo(data);
            },
            fail: function (e, data) {
                var Errors = [];
                $.each(data.messages, function (index, error) {
                    Errors.push(error);
                });
                if (Errors.length > 0) {
                    cwkErroTit("Erro no arquivo selecionado!", Errors.join("\n"));
                }
            },
        }).on('fileuploadprogressall', function (e, data) {
            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('.progress .progress-bar').css('width', progress + '%');
        });

        $(":input[type='text']:enabled:visible:first").focus();

    });

    function CarregarGridLogImportacaoAFD() {
        var dtIni = $("#DataInicial").val();
        var dtFin = $("#DataFinal").val();
            $.ajax(
                {
                    type: 'GET',
                    url: '/ImportacaoBilhetes/DadosGridLogImportacao/',
                    dataType: 'html',
                    data: {
                        dataIni: dtIni,
                        dataFim: dtFin
                    },
                    cache: false,
                    async: true,
                    beforeSend: function () {
                        $("#btnImportados").prop("disabled", true);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        if (xhr.responseText.indexOf('Usuário sem permissão') >= 0) {
                            cwkErro("Acesso negado, Contate o administrador do sistema!");
                        }
                        else {
                            var sErrMsg = "";
                            sErrMsg += "Erro: ";
                            sErrMsg += "\n\n" + " - Status :" + textStatus;
                            sErrMsg += "\n\n" + " - Status Erro :" + xhr.status;
                            sErrMsg += "\n\n" + " - Tipo Erro :" + errorThrown;
                            sErrMsg += "\n\n" + " - Mensagem Erro :" + xhr.responseText;
                            cwkErro(sErrMsg);
                        }
                    },
                    success: function (data) {
                        $('#divTbLogImportacaoArquivo').html(data);
                    },
                    complete: function () {
                        $("#btnImportados").prop("disabled", false);
                    }
                });
     }

    function ValidaArquivo(data) {
        $.ajax({
            dataType: "json",
            type: "GET",
            url: "/ImportacaoBilhetes/ValidaAFD",
            data: {
                'nomeArquivo': data.result.nome, 'bRazaosocial': $("#bRazaoSocial").is(':checked') ? true : false, 'dias': diasPeriodo($("#DataInicial").val(), $('#DataFinal').val())
            },
            success: function (valida) {
                $("#spanResultArquivo").removeClass("label-default");
                $("#iconeResultArquivo").removeClass("glyphicon-paperclip");
                if (valida.Valido === true) {
                    $("#btnImpBil").html("Importar Arquivo");
                    $("#btnImpBil").prop("disabled", false);
                    $("#IdRep").val(valida.IdRelogio);
                    $("#iconeResultArquivo").removeClass("glyphicon-remove");
                    $("#iconeResultArquivo").addClass("glyphicon-ok");
                    $("#spanResultArquivo").removeClass("label-danger");
                    $("#spanResultArquivo").addClass("label-success");

                }
                else {
                    $("#btnImpBil").html("Importar Arquivo");
                    $("#btnImpBil").prop("disabled", true);
                    $("#IdRep").val(0);
                    cwkErro(valida.Erro);
                    addErroInput("NomeArquivo", valida.Erro + '  .');
                    $("#iconeResultArquivo").removeClass("glyphicon-ok");
                    $("#iconeResultArquivo").addClass("glyphicon-remove");
                    $("#spanResultArquivo").removeClass("label-success");
                    $("#spanResultArquivo").addClass("label-danger");
                }
            },
        }).fail(function (jqXHR, exception) {
            // Our error logic here
            var msg = '';
            if (jqXHR.status === 0) {
                msg = 'Verifique a conexão com a internet.';
            } else if (jqXHR.status == 404) {
                msg = 'Erro na requisição';
            } else if (jqXHR.status == 500) {
                msg = 'Erro Interno.';
            } else if (exception === 'parsererror') {
                msg = 'Erro ao converter requisição.';
            } else if (exception === 'timeout') {
                msg = 'Tempo Excedido.';
            } else if (exception === 'abort') {
                msg = 'Requisição Cancelada.';
            } else {
                msg = 'Erro: ' + jqXHR.responseText;
            }
            cwkErro(msg);
        });
    }

    $("#btnImpBil").click(function (event) {
        $("#btnImpBil").text("Aguarde...");
        $("#btnImpBil").prop("disabled", true);
        var dias = diasPeriodo($("#DataInicial").val(), $('#DataFinal').val());
        if (dias == 0) {
            event.preventDefault();
        }
        else {
            $('form').submit();
            event.preventDefault();
        }
    });

    $('form').submit(function (e) {
        e.preventDefault();
        if ($(this).valid()) {
            PostFormJob(this);
        }
        return false;
    });

    function callbackrealtorio() {
        $("#btnImpBil").text("Importar Arquivo");
        $("#btnImpBil").prop("disabled", false);
        $('#nome_arquivo').val("");
        $('.progress .progress-bar').css('width', 0 + '%');
    }

    $("#bMarcacaoIndividual").click(function (event) {
        if ($("#bMarcacaoIndividual").is(':checked')) {
            $('#lkpNomeFuncionarioSelecionado').prop('readonly', false);
        }
        else {
            $('#lkpNomeFuncionarioSelecionado').prop('readonly', true);
            $('#lkpNomeFuncionarioSelecionado').val('');
        }
    });

    $("#bRazaoSocial").click(function (event) {
        if ($("#bRazaoSocial").is(':checked')) {
            $('#lkpRazaoSocialCliente').prop('readonly', false);
        }
        else {
            $('#lkpRazaoSocialCliente').prop('readonly', true);
            $('#lkpRazaoSocialCliente').val('');
        }
    });

</script>
@if (ViewBag.Consultar == 1)
{
    <script>
        $(document).ready(function () {
            $('form').find('input, textarea, button, select').attr('disabled', 'disabled');
        })
    </script>
}