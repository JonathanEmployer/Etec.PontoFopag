@model Modelo.Marcacao
@using System.Web.Optimization

@{
    ViewBag.Title = "Manutenção Diária";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("", "", FormMethod.Post, new { id = "FormTabelaMarcacao" }))
{
    <div class="" style="padding-top:2px;">
        <!-- Modal -->
        <div class="modal fade" id="myModal" tabindex="" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="padding-right:5px; padding-left:5px; padding-top:1px;">
            <div class="modal-dialog role=" document" style="width:100%;  padding-right:2px; padding-left:5px; padding-top:5px; margin-top:2px; margin-bottom:0px">
                <div class="modal-content">
                    <div class="modal-header" style="padding:5px">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <h4 class="modal-title" id="myModalLabel">Manutenção Diária</h4>
                    </div>
                    <div class="modal-body" id="corpoModel" style="padding-top:5px;">
                        <div style="padding-top:0;">
                            @Html.ValidationSummary(true)
                            <div class="panel panel-default" style="margin-bottom:0px;">
                                <div class="panel-body" style="margin-top:0; margin-bottom:0; padding-top:0px; padding-bottom:5px;">
                                    <div class="row">
                                        <div class="col-md-2">
                                            <div class="panel panel-default" id="pnlData" style="margin-top:7px; padding-top:0px; margin-bottom:5px">
                                                <div class=" panel-heading" style="margin-top:0; margin-bottom:0; padding-top:0; padding-bottom:0px;">Período</div>
                                                <div class="panel-body" style="margin-top:0; margin-bottom:0; padding-top:0; padding-bottom:5px;">
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <div class="form-group input-group-sm">
                                                                <div class="col-md-12">
                                                                    <div class="input-group input-group-sm">
                                                                        @Html.TextBoxFor(model => model.DataInicial, new { @class = "form-control input-sm MascDate", id = "DataInicial" })

                                                                        <span class="input-group-btn">
                                                                            <button class="btn btn-primary btndatepicker" id="btnDataInicial" type="button" title="Data Inicial"><span class="glyphicon glyphicon-calendar"></span></button>
                                                                        </span>
                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.DataInicial)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <div class="form-group input-group-sm">
                                                                <div class="col-md-12">
                                                                    <div class="input-group input-group-sm">
                                                                        @Html.TextBoxFor(model => model.DataFinal, new { @class = "form-control input-sm MascDate", id = "DataFinal" })
                                                                        <span class="input-group-btn">
                                                                            <button class="btn btn-primary btndatepicker" id="btnDataFinal" type="button" title="Data Final"><span class="glyphicon glyphicon-calendar"></span></button>
                                                                        </span>
                                                                    </div>
                                                                    @Html.ValidationMessageFor(model => model.DataFinal)
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-5">
                                            <div class="row">
                                                <div id="divEmpresa" class="divsTipo">
                                                    <div class="form-group">
                                                        <div class="col-md-3">
                                                            @Html.LabelFor(model => model.Empresa, new { @class = "control-label label-sm" })
                                                        </div>
                                                        <div class="col-md-9">
                                                            <div class="input-group input-group-sm">
                                                                @Html.TextBoxFor(model => model.Empresa, new { @class = "form-control  input-sm lkpEmpresa", id = "lkpEmpresa" })
                                                                <span class="input-group-btn">
                                                                    <button class="btn btn-primary lkpEmpresa" id="btnEmpresa" type="button" title="Pesquisa Empresa"><span class="glyphicon glyphicon-search"></span></button>
                                                                </span>
                                                            </div>
                                                            @Html.ValidationMessageFor(model => model.Empresa)
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div id="divDepartamento" class="divsTipo">
                                                    <div class="form-group">
                                                        <div class="col-md-3">
                                                            @Html.LabelFor(model => model.Departamento, new { @class = "control-label label-sm" })
                                                        </div>
                                                        <div class="col-md-9">
                                                            <div class="input-group input-group-sm">
                                                                @Html.TextBoxFor(model => model.Departamento, new { @class = "form-control  input-sm lkpDepartamento", id = "lkpDepartamento" })
                                                                <span class="input-group-btn">
                                                                    <button class="btn btn-primary lkpDepartamento" id="btnDepartamento" type="button" title="Pesquisa Departamento"><span class="glyphicon glyphicon-search"></span></button>
                                                                </span>
                                                            </div>
                                                            @Html.ValidationMessageFor(model => model.Departamento)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div id="divContrato" class="divsTipo">
                                                    <div class="form-group">
                                                        <div class="col-md-3">
                                                            @Html.LabelFor(model => model.Contrato, new { @class = "control-label label-sm" })
                                                        </div>
                                                        <div class="col-md-9">
                                                            <div class="input-group input-group-sm">
                                                                @Html.TextBoxFor(model => model.Contrato, new { @class = "form-control  input-sm lkpContrato", id = "lkpContrato" })
                                                                <span class="input-group-btn">
                                                                    <button class="btn btn-primary lkpContrato" id="btnContrato" type="button" title="Pesquisa Contrato"><span class="glyphicon glyphicon-search"></span></button>
                                                                </span>
                                                            </div>
                                                            @Html.ValidationMessageFor(model => model.Contrato)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    @*Legenda Cores*@
                                                    <div class="col-md-12">
                                                        <div class="col-md-3">
                                                            @Html.Label("Legenda Marcações:", new { @class = "control-label label-sm" })
                                                        </div>
                                                        <div class="col-md-2">
                                                            <br />
                                                            <span style="width:10px;height:10px;background-color:#3C9C52;float:left;margin-top:5px;"></span><p style="padding-left:15px">Inclusão</p>
                                                        </div>
                                                        <div class="col-md-3">
                                                            <br />
                                                            <span style="width:10px;height:10px;background-color:#C14A4A;float:left;margin-top:5px;"></span><p style="padding-left:15px">Desconsideradas</p>
                                                        </div>
                                                        <div class="col-md-4">
                                                            <br />
                                                            <span style="width:10px;height:10px;background-color:#FFA04D;float:left;margin-top:5px;"></span><p style="padding-left:15px">Pré Assinalada</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-5">
                                            <div class="panel panel-default" id="pnlData" style="margin-top:7px; padding-top:0px; margin-bottom:5px">
                                                <div class=" panel-heading" style="margin-top:0; margin-bottom:0; padding-top:0; padding-bottom:0px;">Filtros</div>
                                                <div class="panel-body" style="margin-top:0; margin-bottom:0; padding-top:0; padding-bottom:5px;">
                                                    <div class="col-md-6 row">
                                                        <div class="checkbox">
                                                            <label>
                                                                @Html.CheckBox("chkFalta", false, new { @class = "control-label label-sm checkBoxFiltro", id = "chkFalta" })
                                                                @Html.Label("Faltas e Atrasos", new { @for = "chkFalta" })
                                                            </label>
                                                        </div>
                                                        <div class="checkbox">
                                                            <label>
                                                                @Html.CheckBox("chkDebitoBH", false, new { @class = "control-label label-sm checkBoxFiltro", id = "chkDebitoBH" })
                                                                @Html.Label("Débito Banco Horas", new { @for = "chkDebitoBH" })
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6 row">
                                                        <div class="checkbox">
                                                            <label>
                                                                @Html.CheckBox("chkMarcIncorreta", false, new { @class = "control-label label-sm checkBoxFiltro", id = "chkMarcIncorreta" })
                                                                @Html.Label("Marcações Incorretas", new { @for = "chkMarcIncorreta" })
                                                            </label>
                                                        </div>
                                                        <div class="checkbox">
                                                            <label>
                                                                @Html.CheckBox("chkSemOcorrencia", false, new { @class = "control-label label-sm checkBoxFiltro", id = "chkSemOcorrencia" })
                                                                @Html.Label("Sem Ocorrências", new { @for = "chkSemOcorrencia" })
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="divGrid" style="margin-top:5px">
                                @Html.Hidden("intervalo", 0, new { id = "intervalo" })
                                <div id="divErro" class="bg-danger" style="text-align:center; font-weight: bold; font-size:16px;">
                                    @Html.ValidationMessage("intervalo")
                                </div>
                                <div id="divGridMarcacao" style="padding-top:0px;">
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="modal-footer" style="margin-bottom: 0px; padding-top:5px; padding-bottom:5px">
                        <div class="row">
                            <div class="col-xs-12 center-block">
                                <div style="text-align: center">
                                    <button type="button" id="btManutMarcacao" title="Manutenção Marcação" class="btn btn-primary btn-sm"><span class="fa fa-gear"></span> Marcação</button>
                                    <button type="button" id="btManutBilhetes" title="Manutenção Bilhetes" class="btn btn-primary btn-sm">
                                        <span class="fa fa-wrench"></span> Bilhetes
                                    </button>
                                    <button type="button" id="btJornada" title="Jornada Alternativa" class="btn btn-primary btn-sm"><span class="fa fa-repeat"></span> Jornada Alternativa</button>
                                    <button type="button" id="btRecMarcacao" title="Recalcula Marcações" class="btn btn-primary btn-sm">
                                        <span class="fa fa-calculator"></span> Recalcular
                                    </button>
                                    <button class="btn btn-primary btn-sm" type="button" id="btnOrdenaHorarioData">
                                        <span class="fa fa-calendar-o"></span>&nbsp;Ordenar Horário
                                    </button>
                                    <button type="button" id="btTurnoFunc" title="Turno do Funcionário" class="btn btn-primary btn-sm">
                                        <span class="glyphicon glyphicon-time"></span> Horário
                                    </button>
                                    <button type="button" id="btTotHorasFunc" title="Total de Horas do Funcionário" class="btn btn-primary btn-sm">
                                        <span class="glyphicon glyphicon-list-alt"></span> Total Horas
                                    </button>
                                    <button type="button" id="btRelManutDiaria" title="Relatório de Manutenção Diária" class="btn btn-primary btn-sm"><span class="glyphicon glyphicon-print"></span> Relatório Manutenção</button>
                                    <button type="button" id="btClassHE" title="Classificação HE" class="btn btn-primary btn-sm">
                                        <span class="fa fa-list-ol"></span> Class. Hora Extra
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="row" style="margin-top:10px">
                            <div class="col-md-12" style="text-align:left">
                                @Html.Partial("../JobManager/JobView")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
                                                        @*fim modal fade*@
                                                        </div>

    <div id="divManutMarcacao" class="modal" style="background-color: rgba(0,0,0,0.4);" accesskey="" data-keyboard="false" data-backdrop="static"></div>
}
                    <script>
                        var errorArray = {};
                        var temAnterior = false;
                        var temProximo = false;


                        $(document).ready(function () {
                            $("#myModal").modal('show');
                            var idMarcacao = 0;

                            callBackEmpresa("#lkpEmpresa");

                            if ('@ViewBag.UtilizaControleContrato'.toLowerCase() == 'true') {
                                $('#divContrato').removeClass('hidden');
                                $('#divDepartamento').addClass('hidden');
                            }
                            else {
                                $('#divContrato').addClass('hidden');
                                $('#divDepartamento').removeClass('hidden');
                            }

                            $(".lkpEmpresa").bind("keydown click", function (e) {
                                cwk_EventoConsultaUnico(e, this, "EventoConsultaOpcaoTodas", "Empresa", "", callBackEmpresa, "", "");
                            });

                            $(".lkpDepartamento").bind("keydown click", function (e) {
                                cwk_EventoConsultaUnico(e, this, "EventoConsultaOpcaoTodas", "Departamento", "#lkpEmpresa", callBackDepartamento, "");
                            });

                            $(".lkpContrato").bind("keydown click", function (e) {
                                cwk_EventoConsultaUnico(e, this, "EventoConsulta", "Contrato", "#lkpEmpresa", callBackDepartamento, "");
                            });

                            //Tratamento Período
                            setaDatePiker('#DataInicial');
                            setaDatePiker('#DataFinal');
                            cwk_DataCalendario('#btnDataInicial', '#DataInicial');
                            cwk_DataCalendario('#btnDataFinal', '#DataFinal');
                            var dtIniAnt;
                            var dtFinAnt;
                            $('#DataInicial').datepicker().on('show', function (ev) {
                                dtIniAnt = $("#DataInicial").val();
                                dtFinAnt = $("#DataFinal").val();
                            });
                            $('#DataFinal').datepicker().on('show', function (ev) {
                                dtIniAnt = $("#DataInicial").val();
                                dtFinAnt = $("#DataFinal").val();
                            });

                            $('#DataInicial').datepicker().on('hide', function (ev) {
                                if (($("#DataInicial").val() != null && $("#DataInicial").val() != "") && ($("#DataFinal").val() == null || $("#DataFinal").val() == "")) {
                                    var inid = new Date(ev.date);
                                    endDate = new Date(ev.date);
                                    endDate.setDate(endDate.getDate() + 30);
                                    endDateString = ('0' + endDate.getDate()).slice(-2) + '/'
                                                    + ('0' + (endDate.getMonth() + 1)).slice(-2) + '/'
                                                    + endDate.getFullYear();
                                    $('#DataFinal').val(endDateString);
                                    $('#DataFinal').datepicker('update');
                                }
                                if ($("#DataInicial").val() != dtIniAnt || $("#DataFinal").val() != dtFinAnt) {
                                    carregaGridMarcacao("", null);
                                }
                            });

                            $('#DataFinal').datepicker().on('hide', function (ev) {
                                if ($("#DataInicial").val() != dtIniAnt || $("#DataFinal").val() != dtFinAnt) {
                                    carregaGridMarcacao("", null);
                                }
                            });
                            //Fim Tratamento Período
                            $("#corpoModel").css("height", (cwk_AlturaTela() - 100) + "px");
                            $("#myModal").css("padding-left", "5px");

                        });

                        $('#btTurnoFunc').click(function () {
                            if (parametrosValidos(true)) {
                                var tbMarc = $('#tb').dataTable();
                                idMarcacao = cwk_GetIdSelecionado(tbMarc);
                                if (idMarcacao != undefined) {
                                    cwk_CadastroAjax("ConsultaHorario", "ManutencaoDiaria", parametros = { 'id': idMarcacao }, "");
                                }
                                else {
                                    cwkErro("Selecione um Registro");
                                }
                            }
                        });

                        function callBackEmpresa(campo) {
                            var empresa = $(campo).val();
                            var codigoEmp = empresa.split('|');
                            codigoEmp = $.trim(codigoEmp[0]);
                            $("#lkpDepartamento").val("0 | TODOS OS DEPARTAMENTOS");
                            if (codigoEmp == "0") {
                                $('#lkpDepartamento').prop('readonly', true);
                                $("#btnDepartamento").prop('disabled', true);
                                $('#lkpContrato').prop('readonly', true);
                                $("#btnContrato").prop('disabled', true);
                            }
                            else {
                                $('#lkpDepartamento').prop('readonly', false);
                                $("#btnDepartamento").prop('disabled', false);
                                $('#lkpContrato').prop('readonly', false);
                                $("#btnContrato").prop('disabled', false);
                            }
                            controlaFocus();
                            carregaGridMarcacao("", null);
                        }

                        function controlaFocus() {
                            if ($("#Data").val() == null || $("#Data").val() == "") {
                                campoFoco = "#Data";
                            }
                            else {
                                if (!$('#lkpDepartamento').is('[readonly]')) {
                                    campoFoco = "#lkpDepartamento";
                                }
                            }
                            $(campoFoco).focus();
                        }

                        function callBackDepartamento(campo) {
                            controlaFocus();
                            carregaGridMarcacao("", null);
                        }

                        function callBackErro(campo) {
                            $("#divDadosFuncionario").html("");
                            $("#divGridMarcacao").html("");
                        }

                        function carregaGridMarcacao(response, campoChamou) {
                            if (parametrosValidos(true)) {
                                callBackDesabilitarData();
								CarregaDadosAjax('GridMarcacoes', 'ManutencaoDiaria', ParamPeriodoEmpDepCont(), '#divGridMarcacao', campoChamou, callBackGrid);
                            }
                            else {

                                $("#divGridMarcacao").html("");
                            }
						}

						function callBackGrid() {
							FiltrarGrid();
							callBackHabilitarData();
						}

						function callBackHabilitarData() {
                            habilitaDesabilitarCampos(false);
                        }

                        function callBackDesabilitarData() {
                            habilitaDesabilitarCampos(true);
                        }

                        function habilitaDesabilitarCampos(valor) {
                            $("#btnDataInicial").prop('disabled', valor);
                            $("#btnDataFinal").prop('disabled', valor);
                            $("#DataInicial").prop('disabled', valor);
                            $("#DataFinal").prop('disabled', valor);
                            $("#lkpEmpresa").prop('disabled', valor);
                            $("#btnEmpresa").prop('disabled', valor);
                        }


                        $('#btTotHorasFunc').click(function (event) {
                            var tbMarc = $('#tb').dataTable();
                            idMarcacao = cwk_GetIdSelecionado(tbMarc);
                            if (idMarcacao > 0) {
                                if (parametrosValidos(true)) {
                                    cwk_CadastroAjax("VisualizacaoResumoHoras", "ManutencaoDiaria", ParamPeriodoEmpDepFuncCont(), "");
                                }
                            }
                            else {
                                cwkErroTit('Selecione um Registro!', 'É necessário selecionar um registo para realizar essa operação!');
                                return null;
                            }

                        });

                        function callBackRecalcMarcacao() {
                            carregaGridMarcacao("", '#btRecMarcacao');
                        };

                        $('#btRecMarcacao').click(function () {
                            if (parametrosValidos(true)) {
                                $('#myModal').scrollTop(($('#ManutencaoDiariaTabelaMarcacao').position().top + 150));
                                PostReturnJob("/ManutencaoDiaria/RecalculaMarcacao", "Post", ParamPeriodoEmpDepCont(), "ManutencaoDiariaTabelaMarcacao", false);
                            }
                        });

                        function OnJobComplete(job) {
                            ScrollPageJobIncio();
                            callBackRecalcMarcacao();
                        };

                        function ParamPeriodoEmpDepCont() {
                            var emp = $("#lkpEmpresa").val();
                            var depart = $("#lkpDepartamento").val();
                            var cont = $("#lkpContrato").val();
                            var dataIni = $("#DataInicial").val();
                            var dataFin = $("#DataFinal").val();
                            return parametros = {
                                empresa: emp,
                                departamento: depart,
                                contrato: cont,
                                dataInicial: dataIni,
                                dataFinal: dataFin
                            };
                        }

                        function ParamPeriodoEmpDepFuncCont() {
                            var emp = $("#lkpEmpresa").val();
                            var depart = $("#lkpDepartamento").val();
                            var cont = $("#lkpContrato").val();
                            var dataIni = $("#DataInicial").val();
                            var dataFin = $("#DataFinal").val();
                            var tbMarc = $('#tb').dataTable();
                            idMarcacao = cwk_GetIdSelecionado(tbMarc);
                            if (idMarcacao > 0) {

                                var linha = tbMarc.$('tr.selected')[0];
                                var idFunc = 0;
                                if (linha != undefined) {
                                    idFunc = Number($(linha.cells[2]).attr("id"));
                                    return parametros = {
                                        empresa: emp,
                                        departamento: depart,
                                        contrato: cont,
                                        dataInicial: dataIni,
                                        dataFinal: dataFin,
                                        funcionario: idFunc
                                    };
                                }
                                return null;
                            }
                            else {
                                cwkErroTit('Selecione um Registro!', 'É necessário selecionar um registo para realizar essa operação!');
                                return null;
                            }
                        }

                        function parametrosValidos(bValidaPeriodo) {
                            var emp = $("#lkpEmpresa").val();
                            var depart = $("#lkpDepartamento").val();
                            if ((!bValidaPeriodo || (bValidaPeriodo && validaPeriodoTabelaMarcacao())) && depart != null && depart != "" && emp != null && emp != "") {
                                return true;
                            }
                            else {
                                return false;
                            }
                        }

                        function validaPeriodoTabelaMarcacao() {
                            return validaPeriodo("#DataInicial", "#DataFinal", "#pnlData", "intervalo", "#FormTabelaMarcacao");
                        }

                        $('#btManutBilhetes').on("click", function () {
                            var tbMarc = $('#tb').dataTable();
                            idMarcacao = cwk_GetIdSelecionado(tbMarc);
                            if (idMarcacao > 0) {
                                cwk_CadastroAjaxParam('Grid', 'ManutencaoBilhetes', idMarcacao, "", "");
                            }
                            else { cwkErroTit('Selecione um Registro!', 'É necessário selecionar um registo para realizar essa operação!'); }
                        });

                        $('#btRelManutDiaria').click(function (event) {
                            var parms = ParamPeriodoEmpDepCont();
                            if (parms != null) {
                                //var param = {
                                //    method: "post",
                                //    action: "/RelatorioManutencaoDiaria/ManutencaoDiaria",
                                //    emp: parms.empresa,
                                //    depart: parms.departamento,
                                //    dataInicial: parms.dataInicial,
                                //    dataFinal: parms.dataFinal
                                //};
                                //cwk_PostAjax('ManutencaoDiariaParms', 'RelatorioManutencaoDiaria', param);
                                PostReturnJob("/RelatorioManutencaoDiaria/ManutencaoDiariaParms", "Post", parms, "ManutencaoDiariaTabelaMarcacao", false);
                            }
                            else {
                                cwkErro("Selecione um registro!");
                            }
                        });

                        function callBackCtoPonto() {
                            $(".datepickerpt").datepicker('hide');
                            $("#btnRelPdf").focus();
                        }

                        $('#btnOrdenaHorarioData').click(function (event) {
                            if (cwk_GetIdSelecionado($('#tb').DataTable()) !== undefined) {
                                $('#myModal').scrollTop(($('#ManutencaoDiariaTabelaMarcacao').position().top + 150));
                                PostReturnJob("/ManutencaoDiaria/OrdenaMarcacaoIndividual", "Post", parametros = { 'id': cwk_GetIdSelecionado($('#tb').DataTable()) }, "ManutencaoDiariaTabelaMarcacao", false);
                            }
                            else {
                                cwkErro("Selecione um registro!");
                            }
                        });

                        $('#btJornada').on("click", function () {
                            var tbMarc = $('#tb').dataTable();
                            idMarcacao = cwk_GetIdSelecionado(tbMarc);
                            if (idMarcacao > 0) {
                                cwk_CadastroAjaxParam('CadastrarJornadaManutMarcacao', 'JornadaAlternativa', idMarcacao, "", "");
                            }
                            else { cwkErroTit('Selecione um Registro!', 'É necessário selecionar um registo para realizar essa operação!'); }
                        });

                        $('#btManutMarcacao').on("click", function () {
                            chamaManutMarcacao();
                        });

                        $('#btClassHE').on("click", function () {
                            HorasClassificar();
                        });

                        function HorasClassificar() {
                            cwk_CadastroAjaxParam('HorasExtrasAClassificar', 'ClassificacaoHorasExtras', 0, ParamPeriodoEmpDepCont(), "", "");
                        }

                        function chamaManutMarcacao() {
                            var oTb = $('#tb').dataTable();
                            idMarcacao = cwk_GetIdSelecionado(oTb);
                            if (idMarcacao > 0) {
                                cwk_CadastroAjaxParam('ManutMarcacao', 'Marcacao', idMarcacao, "", "#divManutMarcacao", callBackManutMarcacao);
                            }
                            else { cwkErroTit('Selecione um Registro!', 'É necessário selecionar um registo para realizar essa operação!'); }
                        }

                        function callBackManutMarcacao() {
                            setaFoco();
                        };

                        function setaFoco() {
                            var camposDiv = $('#divManutMarcacao').find("#txtMarcacaoE1").focus();
						};

						function FiltrarGrid() {
							var Filtros = [];
							if ($("#chkFalta").is(':checked')) {
								Filtros.push("FT");
							}
							if ($("#chkDebitoBH").is(':checked')) {
								Filtros.push("DBH");
							}
							if ($("#chkMarcIncorreta").is(':checked')) {
								Filtros.push("MI");
							}
							if ($("#chkSemOcorrencia").is(':checked')) {
								Filtros.push("SN");
							}

							var filtro = Filtros.join("|");
							oTb.columns(22).search(filtro, false, true).draw();
						}

                        var $window = $(window).on('resize', function () {
                            var alturaTela = cwk_AlturaTela();
                            var alturaDiv = alturaTela * 36 / 100;
                            if (cwk_AlturaResolucao() <= 768) {
                                alturaDiv = alturaTela * 45 / 100;
                            }
                            $("#divGrid").height(alturaDiv);
                        }).trigger('resize');
                    </script>
