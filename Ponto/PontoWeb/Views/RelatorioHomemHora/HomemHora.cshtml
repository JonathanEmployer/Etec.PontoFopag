@model Modelo.Relatorios.RelatorioHomemHoraModel
@using System.Web.Optimization

@{
    ViewBag.Title = "Homem Hora";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    <div class="">
        <div class="">
            <div class="panel panel-default" style="margin-bottom:0">
                <div class="panel-heading">
                    @Html.ActionLink("X", "Index", "Home", null, new { @class = "close" })
                    <h3 class="panel-title titulo-pagina">@ViewBag.Title</h3>
                </div>
                <div class="panel-body panelConteudo" id="panelBodyFixo">
                    @Html.HiddenFor(x => x.TipoSelecao)
                    @Html.ValidationSummary(true)
                    @Html.ValidationMessage("CustomError", new { id = "CustomError" })
                    @Html.HiddenFor(model => model.TipoArquivo, new { id = "tipoArquivo" })
                    <div>
                        <div class="col-md-12">
                            @Html.ValidationMessageFor(model => Model.TipoSelecao)
                        </div>
                        <div class="row" style="padding-bottom:4px;">
                            <div id="divPeriodo" class="col-md-12">
                                <div class="panel panel-default" id="pnlData">
                                    <div class="panel-heading" style="padding-top:5px; padding-bottom:5px">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="col-md-2"><label class="control-label label-sm">Período</label></div>
                                                <div class="col-md-8">
                                                    <div class="row">
                                                        <div class="col-md-5">
                                                            <div class="input-group input-group-sm" >
                                                                @Html.TextBoxFor(model => Model.InicioPeriodo, new { @class = "form-control input-sm MascDate datepickerpt", id = "InicioPeriodo" })
                                                                <span class="input-group-btn">
                                                                    <button class="btn btn-primary" id="btnDtInicio" type="button"><span class="glyphicon glyphicon-calendar"></span></button>
                                                                </span>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-1">
                                                            @Html.Label("a", new { @class = "label-sm" })
                                                        </div>
                                                        <div class="col-md-5">
                                                            <div class="input-group input-group-sm" >
                                                                @Html.TextBoxFor(model => Model.FimPeriodo, new { @class = "form-control input-sm MascDate datepickerpt", id = "FimPeriodo" })
                                                                <span class="input-group-btn">
                                                                    <button class="btn btn-primary" id="btnDtFim" type="button"><span class="glyphicon glyphicon-calendar"></span></button>
                                                                </span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="checkbox" style="padding: 0; margin: 0">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.bOcorrencia, new { id = "bOcorrencia" })
                                                        @Html.LabelFor(model => model.bOcorrencia, new { @class = "control-label label-sm", @for = "bOcorrencia" })
                                                        @Html.ValidationMessageFor(model => model.bOcorrencia)
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                @Html.HiddenFor(model => model.Intervalo)
                                                @Html.ValidationMessageFor(model => model.Intervalo)
                                                @Html.ValidationMessageFor(model => Model.InicioPeriodo)
                                                @Html.ValidationMessageFor(model => Model.FimPeriodo)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="radio-inline">
                                                @Html.RadioButtonFor(model => model.HorasClassParametro, 0, new { id = "rdbTods", name = "rdioHorasClassParm" })
                                                <label class="label-sm" for="rdbTods">Todas Horas Extras</label>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="radio-inline">
                                                @Html.RadioButtonFor(model => model.HorasClassParametro, 1, new { id = "rdbEC", name = "rdioHorasClassParm" })
                                                <label class="label-sm" for="rdbEC">Somente Horas Extras Classificadas</label>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="radio-inline">
                                                @Html.RadioButtonFor(model => model.HorasClassParametro, 2, new { id = "rdbEnC", name = "rdioHorasClassParm" })
                                                <label class="label-sm" for="rdbEnC">Somente Horas Extras não Classificadas</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                @Html.HiddenFor(x => x.IdSelecionados)
                                @Html.ValidationMessageFor(x => x.IdSelecionados)
                                <div class="row">
                                    @Html.GridFor("tbFun", (new Modelo.Proxy.pxyFuncionarioRelatorio()).GetType(), true, "GetFuncsRel", "GetFuns", "", "", Model.IdSelecionados, "")
                                </div>
                            </div>
                        </div>
                        <div class="row" style="margin-top:5px" id="divTbOcorrencia">
                            <div class="col-md-12">
                                @Html.HiddenFor(x => x.idSelecionadosOcorrencias)
                                @Html.ValidationMessageFor(x => x.idSelecionadosOcorrencias)
                                <div class="row">
                                    @Html.GridFor("tbOcorrencias", (new Modelo.Proxy.pxyOcorrencias()).GetType(), true, "GetFuncsRel", "GetOcorrencias", null, "ValidaOcorrencia", Model.idSelecionadosOcorrencias, "")
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                @Html.Partial("../JobManager/JobView")
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-footer">
                    <div class="row">
                        <div class="col-xs-12 center-block">
                            <div style="text-align: right">
                                <button type="submit" id="btnXls" class="btn btn-primary btnEnviar"><span class="fa fa-file-excel-o"></span>&nbsp;Gerar Excel</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script>
    var errorArray = new Array();
    cwk_DataCalendario('#btnDtInicio', '#InicioPeriodo');
    cwk_DataCalendario('#btnDtFim', '#FimPeriodo');

    $(document).ready(function () {
        $('.datepickerpt').datepicker().on('hide', function (ev) {
            $("#pnlData").removeClass("panel-danger").removeClass("panel-success");
            $("#pnlData").addClass("panel-default");
              errorArray["Intervalo"] = null;
            $("form").validate().showErrors(errorArray);
            if ((this.id == "InicioPeriodo") && (($("#InicioPeriodo").val() != null && $("#InicioPeriodo").val() != "") && ($("#FimPeriodo").val() == null || $("#FimPeriodo").val() == ""))) {
                var inid = new Date(ev.date);
                endDate = new Date(ev.date);
                endDate.setDate(endDate.getDate() + 30);
                endDateString = ('0' + endDate.getDate()).slice(-2) + '/'
                                + ('0' + (endDate.getMonth() + 1)).slice(-2) + '/'
                                + endDate.getFullYear();
                $('#FimPeriodo').val(endDateString);
                $('#FimPeriodo').datepicker('update');
            }
            //validaPeriodo(this);
            validaPeriodo("#InicioPeriodo", "#FimPeriodo", "#pnlData", "Intervalo", "form", true);
         
        });

        $('#tbFun tbody').on('click', 'tr', function () {
            errorArray["IdSelecionados"] = null;
            $("form").validate().showErrors(errorArray);
        });
    });

    $("#bOcorrencia").on("click", ValidaOcorrencia);

       function ValidaOcorrencia() {
        if ($("#bOcorrencia").is(':checked'))
            $("#tbOcorrencias, #divTbOcorrencia").show();
        else
            $("#tbOcorrencias, #divTbOcorrencia").hide();
    }

    $("#btnXls").click(function (event) {
        if (!validaForm()) {
            event.preventDefault();
        }
        else {
            $("#tipoArquivo").val("Excel");
        }
    });

    $('form').submit(function () {
        if ($(this).valid()) {
            PostFormJob(this);
        }
        return false;
    });

    function validaForm() {
        $("#IdSelecionados").val(tbFunGetSelecionado());
        if ($("#IdSelecionados").val().length <= 0 || $("#IdSelecionados").val() == '' || $("#IdSelecionados").val() == null) {
            var msgErro = 'Para Imprimir o Relatório é Necessário Selecionar Pelo Menos um Funcionário.';
            errorArray["IdSelecionados"] = msgErro;
            cwkErro(msgErro);
            $("form").validate().showErrors(errorArray);
            return false;
        }
        else {
            errorArray["IdSelecionados"] = null;
            $("form").validate().showErrors(errorArray);

        }

        if ($("#bOcorrencia").is(':checked')) {
            $("#idSelecionadosOcorrencias").val(tbOcorrenciasGetSelecionado());
            if ($("#idSelecionadosOcorrencias").val().length <= 0 || $("#idSelecionadosOcorrencias").val() == '' || $("#idSelecionadosOcorrencias").val() == null) {
                var msgErro = 'Para Imprimir o Relatório de Ocorrências é Necessário Selecionar Pelo Menos uma Ocorrência.';
                errorArray["idSelecionadosOcorrencias"] = msgErro;
                cwkErro(msgErro);
                $("form").validate().showErrors(errorArray);
                return false;
            }
            else {
                errorArray["idSelecionadosOcorrencias"] = null;
                $("form").validate().showErrors(errorArray);
            }
        }
        return true;
    }
    
</script>




