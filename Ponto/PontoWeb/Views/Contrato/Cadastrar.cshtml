@model Modelo.Contrato
@{
    ViewBag.Title = "Cadastrar Contrato";
    bool integrado = false;
    if (Model.idIntegracao.GetValueOrDefault() > 0 && ViewBag.BloqueiaDadosIntegrados)
    {
        integrado = true;
    }
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id, new { id = "idContrato" });
    @Html.HiddenFor(model => model.Incdata);
    @Html.HiddenFor(model => model.Inchora);
    @Html.HiddenFor(model => model.Incusuario);
    @Html.HiddenFor(model => model.Altdata);
    @Html.HiddenFor(model => model.Althora);
    @Html.HiddenFor(model => model.Altusuario);
    @Html.HiddenFor(model => model.idIntegracao);
    <div class="divCenterPequeno">
        <div class="panel panel-default" style="padding:0">
            <div class="panel-heading salvando">
                @Html.ActionLink("X", "Grid", "Contrato", null, new { @class = "close" })
                <h3 class="panel-title titulo-pagina">@ViewBag.Title</h3>
            </div>
            <div class="panel-body panelConteudo">
                @Html.ValidationMessage("CustomError")
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Codigo, new { @class = "control-label label-sm", @readonly = "disabled" })
                            @Html.TextBoxFor(model => model.Codigo, new { @class = "form-control  input-sm" }).IsReadonly(integrado)
                            @Html.ValidationMessageFor(model => model.Codigo)
                        </div>
                    </div>
                    <div class="col-md-9">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CodigoContrato, new { @class = "control-label label-sm" })
                            @Html.TextBoxFor(model => model.CodigoContrato, new { @class = "form-control  input-sm" }).IsReadonly(integrado)
                            @Html.ValidationMessageFor(model => model.CodigoContrato)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DescricaoContrato, new { @class = "control-label label-sm" })
                            @Html.TextBoxFor(model => model.DescricaoContrato, new { @class = "form-control  input-sm" }).IsReadonly(integrado)
                            @Html.ValidationMessageFor(model => model.DescricaoContrato)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.NomeEmpresa, new { @class = "control-label label-sm" })
                            <div class="input-group input-group-sm">
                                @Html.TextBoxFor(model => model.NomeEmpresa, new { @class = "form-control  input-sm", id = "lkpEmpresa" }).IsReadonly(integrado)
                                <span class="input-group-btn">
                                    <button class="btn btn-primary" id="btnEmpresa" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.NomeEmpresa)
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading" style="padding-top:1px; padding-bottom:0px">
                        <div class="row">
                            <div class="col-md-12">
                                <label class="control-label label-sm">Data para fechamento do ponto</label>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-3 ">
                                <div class="form-group input-group-sm">
                                    @Html.LabelFor(model => model.DiaFechamentoInicial, new { @class = "control-label label-sm" })
                                    @Html.TextBoxFor(model => model.DiaFechamentoInicial, new { @class = "form-control input-sm", onkeypress = "return apenasNumero(event)", type = "number" })
                                    @Html.ValidationMessageFor(model => model.DiaFechamentoInicial)
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group input-group-sm">
                                    @Html.LabelFor(model => model.DiaFechamentoFinal, new { @class = "control-label label-sm" })
                                    @Html.TextBoxFor(model => model.DiaFechamentoFinal, new { @class = "form-control input-sm", onkeypress = "return apenasNumero(event)", type = "number" })
                                    @Html.ValidationMessageFor(model => model.DiaFechamentoFinal)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.TipoHorarioPadraoFunc, new { @class = "control-label label-sm" })
                        @Html.DropDownListFor(model => model.TipoHorarioPadraoFunc, cwkPontoWeb.Models.Helpers.EnumHelper.GetSelectedItemList<Modelo.Listas.TipoHorario>(1), new { @class = "form-control input-sm", style = "height: 25px;" })
                        @Html.HiddenFor(model => model.TipoHorarioPadraoFunc)
                        @Html.ValidationMessageFor(model => model.TipoHorarioPadraoFunc)
                    </div>
                </div>
                <div class="col-md-10">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Horario, new { @class = "control-label label-sm" })
                        <div class="input-group input-group-sm">
                            @Html.TextBoxFor(model => model.Horario, new { @class = "form-control  input-sm", id = "lkpHorario" })
                            <span class="input-group-btn">
                                <button class="btn btn-primary" id="btnHorario" type="button"><span class="glyphicon glyphicon-search"></span></button>
                            </span>
                        </div>
                        @Html.HiddenFor(model => model.Horario)
                        @Html.ValidationMessageFor(model => model.Horario)
                    </div>
                </div>

            </div>
            <div class="panel-footer">
                <div class="row">
                    <div class="col-xs-12 center-block">
                        <div style="text-align: right">
                            <button type="submit" class="btn btn-success salvando">
                                <span class="glyphicon glyphicon-ok-circle"></span> &nbsp;Salvar&nbsp;&nbsp;
                            </button>
                            <a class="btn btn-danger salvando"
                               href="@Url.Action("Grid", "Contrato")">
                                <span class="glyphicon glyphicon-remove"></span> Cancelar
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}
<script>
    $(document).ready(function () {
        cwk_EventoKeyPressConsulta("#lkpEmpresa", "EventoConsulta", "Empresa");
        cwk_EventoConsulta("#btnEmpresa", "#lkpEmpresa", "EventoConsulta", "Empresa", "");
        cwk_EventoConsulta("#btnHorario", "#lkpHorario", "EventoConsulta", "Horario", "#TipoHorarioPadraoFunc");
    });

    $(":input[type='text']:enabled:visible:first").focus();
    $("#TipoHorarioPadraoFunc").change(function () {
        $("#lkpHorario").val('');
    });
</script>

@if (ViewBag.Consultar == 1)
{
    <script>
        $(document).ready(function () {
            $('form').find('input, textarea, button, select').attr('disabled', 'disabled');
        })



    </script>
}