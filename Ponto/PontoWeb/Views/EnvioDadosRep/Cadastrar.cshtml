@model Modelo.EnvioDadosRep
@using System.Web.Optimization

@{
    ViewBag.Title = "REP - Envio de Empresa e Funcionários";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="">
        <div class="panel panel-default" style="padding:0px; margin-bottom:0px;">
            <div class="panel-heading">
                @Html.ActionLink("X", "Grid", "EnvioDadosRep", null, new { @class = "close" })
                <h3 class="panel-title titulo-pagina">@ViewBag.Title</h3>
            </div>
            <div class="panel-body panelConteudo" id="panelBodyFixodivCenter" style="margin-top:0; padding-top:5px; padding-bottom:0; margin-bottom:0px;">
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.idRelogioSelecionado)
                @Html.HiddenFor(model => model.Codigo)
                @Html.HiddenFor(model => model.Incdata)
                @Html.HiddenFor(model => model.Inchora)
                @Html.HiddenFor(model => model.Incusuario)
                @Html.HiddenFor(model => model.Altdata)
                @Html.HiddenFor(model => model.Althora)
                @Html.HiddenFor(model => model.Altusuario)
                @Html.HiddenFor(model => model.idsEmpresasSelecionadas)
                @Html.HiddenFor(model => model.idsFuncionariosSelecionados)
                @Html.ValidationMessage("CustomError", new { id = "ErroGenerico" })
                <div class="row" style="padding-top:0px;">
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-md-4">
                                <label class="control-label label-sm">Relógio</label>
                            </div>
                            <div class="col-md-4">
                                <label class="control-label label-sm">Empresa</label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group input-group-sm">
                                            <div class="form-group">
                                                <div class="input-group input-group-sm">
                                                    @Html.TextBoxFor(model => model.nomeRelogioSelecionado, new { @class = "form-control input-sm lkpRelogioSelecionado editor-field", id = "lkpRelogioSelecionado", autocomplete = "off" })
                                                    <span class="input-group-btn">
                                                        <button class="btn btn-primary lkpRelogioSelecionado" id="btnRelogioSelecionado" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                                    </span>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.nomeRelogioSelecionado)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4" id="tbGridEmpresa">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group input-group-sm">
                                            <div class="form-group">
                                                <div class="input-group input-group-sm">
                                                    @Html.TextBoxFor(model => model.idEmpresaRelogio, new { @class = "form-control input-sm lkpEmpresaSelecionado editor-field", id = "lkpEmpresaSelecionado", autocomplete = "off", disable = true })
                                                    <span class="input-group-btn">
                                                        <button class="btn btn-primary lkpEmpresaSelecionado" id="btnRelogioSelecionado" type="button"><span class="glyphicon glyphicon-search"></span></button>
                                                    </span>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.idEmpresaRelogio)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-1">
                            </div>
                            <div class="col-md-3" id="divUtilizaGrupoEconomico">
                                <div class="checkbox" style="margin-top:1px">
                                    @Html.CheckBoxFor(model => model.bUtilizaGrupoEconomico, new { id = "bUtilizaGrupoEconomico", @class = "bUtilizaGrupoEconomico" })
                                    @Html.LabelFor(model => model.bUtilizaGrupoEconomico, new { @class = "control-label label-sm", @for = "bUtilizaGrupoEconomico" })
                                    @Html.ValidationMessageFor(model => model.bUtilizaGrupoEconomico)
                                </div>
                            </div>
                            @*Parâmetros*@
                            <div class="col-md-4">
                                <div class="panel panel-default">
                                    <div class="panel-heading clearfix" style="padding-bottom:5px; padding-top:5px;">
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="checkbox" style="padding:0; margin:0">
                                                    @Html.Label("Enviar", "Enviar", new { @class = "control-label label-sm" })
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="checkbox" style="margin:0">
                                                    @Html.CheckBoxFor(model => model.bEnviarFunc, new { id = "bParmEnvFunc", @class = "parmsEnv" })
                                                    @Html.LabelFor(model => model.bEnviarFunc, new { @class = "control-label label-sm", @for = "bParmEnvFunc" })
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="checkbox" style="margin:0">
                                                    @Html.CheckBoxFor(model => model.bEnviarEmpresa, new { id = "bParmEnvEmp", @class = "parmsEnv" })
                                                    @Html.LabelFor(model => model.bEnviarEmpresa, new { @class = "control-label label-sm", @for = "bParmEnvEmp" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.bEnviarEmpresa)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="row" style="padding-top:5px;">
                            @*Grids*@
                            @*<div class="col-md-5">
                                @Html.HiddenFor(model => model.idsEmpresasSelecionadas)
                                @Html.ValidationMessageFor(model => model.idsEmpresasSelecionadas)
                                <div id="tbGridEmpresa">
                                    
                                </div>
                            </div>*@
                            <div class="col-md-12">
                                @Html.HiddenFor(model => model.idsFuncionariosSelecionados)
                                @Html.ValidationMessageFor(model => model.idsFuncionariosSelecionados)
                                <div id="tbGridFuncionario">
                                    @*@Html.Partial("gvGridFuncionario", Model)*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel-footer">
            <div class="row">
                <div class="col-xs-12 center-block">
                    <div style="text-align: right">
                        <button type="submit" name="response" value="Accept" formaction=@Url.Action("DownloadArquivo", "EnvioDadosRep") formmethod="post" class="btn btn-sm btn-primary btnPost salvando"><span class="glyphicon glyphicon-download-alt"></span>&nbsp;Download</button>
                        <button type="submit" name="response" value="Accept" formaction=@Url.Action("ExcluirFuncionarios", "EnvioDadosRep") formmethod="post" class="btn btn-sm btn-danger btnPost salvando"><span class="glyphicon glyphicon-trash"></span>&nbsp;Excluir Funcionario(s)</button>
                        <button type="submit" name="response" value="Accept" formaction=@Url.Action("Cadastrar", "EnvioDadosRep") formmethod="post" class="btn btn-sm btn-success btnPost salvando"><span class="glyphicon glyphicon-send"></span>&nbsp;Enviar</button>
                        <a id="btnCancelar" class="btn btn-sm btn-danger salvando btnSalvar"
                           href="@Url.Action("Grid", "EnvioDadosRep")">
                            <span class="glyphicon glyphicon-remove"></span>&nbsp;Cancelar
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>

    $(document).ready(function () {
        $(":input[type='text']:enabled:visible:first").focus();
        $('#idsEmpresasSelecionadas').val('@Model.idsEmpresasSelecionadas');
        $("#idsFuncionariosSelecionados").val('@Model.idsFuncionariosSelecionados');
        var rel = $("#lkpRelogioSelecionado").val();
        CarregarTela();
    });

    $(".lkpRelogioSelecionado").bind("keydown click", function (e) {
        cwk_EventoConsultaUnico(e, this, "", "REP", "", CarregarTela);
        limpaErro($('#lkpRelogioSelecionado').attr('name'));
    });

    $(".lkpEmpresaSelecionado").bind("keydown click", function (e) {
        cwk_EventoConsultaUnico(e, this, "", "REP", "", CarregarTela);
        limpaErro($('#lkpEmpresaSelecionado').attr('name'));
    });

    $("#bParmEnvFunc").click(function () {
        DesabilitarGridFuncionario($(this).is(':checked'));
        if ($(this).is(':checked')) {
            modificaProperties('#bUtilizaGrupoEconomico', false)
        } else {
            if ($('#bUtilizaGrupoEconomico').is(':checked')) {
                $('#bUtilizaGrupoEconomico').prop('checked', false);
                $("#bUtilizaGrupoEconomico").trigger("change");
            }
            modificaProperties('#bUtilizaGrupoEconomico', true);
            DeselecionarTodos('tbFun');
        }
    });

    function CarregarTela() {
        CarregarGridEmpresa();
    }

    $('form').submit(function (e) {
        $("#idsEmpresasSelecionadas").val(GetSelecionados('tbEmp'));
        $("#idsFuncionariosSelecionados").val(GetSelecionados('tbFun'));
        if (ValidarDadosForm()) {
            e.preventDefault();
            return false;
        }
    });

    function ValidarDadosForm() {
        var erro = false;
        limpaErro('idsFuncionariosSelecionados');
        limpaErro('idsEmpresasSelecionadas');
        limpaErro('nomeRelogioSelecionado');
        if ($("#lkpRelogioSelecionado").val() == '') {
            erro = true;
            addErroInput("nomeRelogioSelecionado", "Campo Relógio Obrigatório!   ");
        }
        else {
            if ($("#idsEmpresasSelecionadas").val() == '' && $('#bParmEnvEmp').is(':checked')) {
                erro = true;
                addErroInput("idsEmpresasSelecionadas", "Para enviar empresa ao menos uma deve ser selecionada!   ");
            }
            else {
                if ($("#idsFuncionariosSelecionados").val() == '' && $('#bParmEnvFunc').is(':checked')) {
                    erro = true;
                    addErroInput("idsFuncionariosSelecionados", "Para enviar funcionários ao menos um deve ser selecionado!   ");
                }
            }
        }
        return erro;
    }

    $('#btnDownload').click(function () {
        $('#ErroGenerico').text("");
    });

    function BuscarNumeroRelogio(rel) {
        $.ajax({
            url: '/EnvioDadosRep/BuscarNumeroRelogio',
            type: 'GET',
            dataType: 'json',
            data: { 'rel': rel },
            success: function (ret) {
                if (ret.Successo === true) {
                    DesabilitaComponentesPeloRelogio(ret.NumRelogio, ret.ExpHab);
                } else {
                    cwkErroTit('Erro!', ret.Erro);
                }
            },
        });
    }

    function DesabilitaComponentesPeloRelogio(NumRelogio, ExpHab) {
        if (NumRelogio === 1) {
            $('.parmsEnv').prop('checked', true);
            modificaProperties('.parmsEnv', true);
        } else {
            modificaProperties('.parmsEnv', false);
        }

        if (ExpHab === true) {
            modificaProperties('#btnDownload', false);
        } else {
            modificaProperties('#btnDownload', true);
        }

        $('#bUtilizaGrupoEconomico').prop('checked', false);

        if (NumRelogio == 17) {
            $("#divUtilizaGrupoEconomico").hide();
        }
        else { $("#divUtilizaGrupoEconomico").show(); }
    }

    function CarregarGridEmpresa() {
        if ( $("#lkpRelogioSelecionado").val() !== '' && $("#lkpRelogioSelecionado").val() !== undefined) {
            CarregaDadosAjax('CarregarGridEmpresa', 'EnvioDadosRep', ParamCarregaTela(), '#tbGridEmpresa', null);
        }
    }

    function CarregarGridFuncionario() {
        $('#idsEmpresasSelecionadas').val(GetSelecionados('tbEmp'));
        var parametros = {
            IdsEmpresas: $('#idsEmpresasSelecionadas').val(),
            idsFuncionariosSelecionados: $("#idsFuncionariosSelecionados").val()
        };
        CarregaDadosAjax('CarregarGridFuncionario', 'EnvioDadosRep', parametros, '#tbGridFuncionario', null);
    }

    function ParamCarregaTela() {
        var rel = $("#lkpRelogioSelecionado").val();
        return parametros = {
            relogio: rel
        };
    }

    function modificaProperties(componente, valor) {
        $(componente).prop('disabled', valor);
        $(componente).attr('disabled', valor);
        $(componente).prop('readonly', valor);
        $(componente).attr('readonly', valor);
    }

    //scripts referente Grid Funcionários
    function DesabilitarGridFuncionario(ativa) {
        if (ativa === true) {
            $('#pnlFunc :input').removeAttr('disabled');
            $('#pnlFunc').css('pointer-events', 'auto');
        }
        else {
            $('#pnlFunc :input').attr('disabled', true);
            $('#pnlFunc').css('pointer-events', 'none');
        }
    }

    // scripts referente Grid Empresa
    $("#bUtilizaGrupoEconomico").change(function () {
        DesabilitarGridEmpresa($('#bUtilizaGrupoEconomico').is(':checked'));
    });

    function DesabilitarGridEmpresa(ativa) {
        if (ativa === true) {
            $('#pnlEmpresa :input').removeAttr('disabled');
            $('#pnlEmpresa').css('pointer-events', 'auto');
            //todosRegistros();
        }
        else {
            DeselecionarTodos('tbEmp');
            if ('@Model.idsEmpresasSelecionadas' != "") {
                SetSelecionados('tbEmp', '@Model.idsEmpresasSelecionadas');
            }
            else
            {
                SetSelecionados('tbEmp', $("#idEmpresaRelogio").val());
            }

            $('#idsEmpresasSelecionadas').val(GetSelecionados('tbEmp'));
            $('#pnlEmpresa :input').attr('disabled', true);
            $('#pnlEmpresa').css('pointer-events', 'none');
            //apenasSelecionados();
            CarregarGridFuncionario();
        }
    }

    function AtualizaFuncsSelecionados() {
        $('#idsFuncionariosSelecionados').val(GetSelecionados('tbFun'));
    }

</script>
@if (ViewBag.Consultar == 1)
{
    <script>
        $(document).ready(function () {
            $('form').find('button, select').attr('disabled', 'disabled');
        })
    </script>
}